

/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2020-01-31T00:39:42.593-05:00
  3.24.0.5
  
  Standalone prediction code with sample test data for GBMModel named SearchResult

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://192.168.0.103:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://192.168.0.103:54321/3/Models.java/SearchResult > SearchResult.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m SearchResult.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="SearchResult", algorithm="gbm")
public class SearchResult extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }

  public boolean isSupervised() { return true; }
  public int nfeatures() { return 1; }
  public int nclasses() { return 3; }

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_SearchResult.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 3;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* currentStateIn */ SearchResult_ColInfo_0.VALUES,
    /* resultOut */ SearchResult_ColInfo_1.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.14285714285714285,0.14285714285714285,0.7142857142857143};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = {0.14285714285714285,0.14285714285714285,0.7142857142857143};

  public SearchResult() { super(NAMES,DOMAINS,"resultOut"); }
  public String getUUID() { return Long.toString(7218617936682360352L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    SearchResult_Forest_0.score0(data,preds);
    SearchResult_Forest_1.score0(data,preds);
    SearchResult_Forest_2.score0(data,preds);
    SearchResult_Forest_3.score0(data,preds);
    SearchResult_Forest_4.score0(data,preds);
    SearchResult_Forest_5.score0(data,preds);
    SearchResult_Forest_6.score0(data,preds);
    SearchResult_Forest_7.score0(data,preds);
    SearchResult_Forest_8.score0(data,preds);
    SearchResult_Forest_9.score0(data,preds);
    SearchResult_Forest_10.score0(data,preds);
    SearchResult_Forest_11.score0(data,preds);
    SearchResult_Forest_12.score0(data,preds);
    SearchResult_Forest_13.score0(data,preds);
    SearchResult_Forest_14.score0(data,preds);
    SearchResult_Forest_15.score0(data,preds);
    SearchResult_Forest_16.score0(data,preds);
    SearchResult_Forest_17.score0(data,preds);
    SearchResult_Forest_18.score0(data,preds);
    SearchResult_Forest_19.score0(data,preds);
    SearchResult_Forest_20.score0(data,preds);
    SearchResult_Forest_21.score0(data,preds);
    SearchResult_Forest_22.score0(data,preds);
    SearchResult_Forest_23.score0(data,preds);
    SearchResult_Forest_24.score0(data,preds);
    SearchResult_Forest_25.score0(data,preds);
    SearchResult_Forest_26.score0(data,preds);
    SearchResult_Forest_27.score0(data,preds);
    SearchResult_Forest_28.score0(data,preds);
    SearchResult_Forest_29.score0(data,preds);
    hex.genmodel.GenModel.GBM_rescale(preds);
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// The class representing training column names
class NamesHolder_SearchResult implements java.io.Serializable {
  public static final String[] VALUES = new String[1];
  static {
    NamesHolder_SearchResult_0.fill(VALUES);
  }
  static final class NamesHolder_SearchResult_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "currentStateIn";
    }
  }
}
// The class representing column currentStateIn
class SearchResult_ColInfo_0 implements java.io.Serializable {
  public static final String[] VALUES = new String[7];
  static {
    SearchResult_ColInfo_0_0.fill(VALUES);
  }
  static final class SearchResult_ColInfo_0_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "-1";
      sa[1] = "0";
      sa[2] = "1";
      sa[3] = "2";
      sa[4] = "3";
      sa[5] = "4";
      sa[6] = "5";
    }
  }
}
// The class representing column resultOut
class SearchResult_ColInfo_1 implements java.io.Serializable {
  public static final String[] VALUES = new String[3];
  static {
    SearchResult_ColInfo_1_0.fill(VALUES);
  }
  static final class SearchResult_ColInfo_1_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "0";
      sa[1] = "4";
      sa[2] = "resultError";
    }
  }
}

class SearchResult_Forest_0 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += SearchResult_Tree_0_class_0.score0(fdata);
    preds[2] += SearchResult_Tree_0_class_1.score0(fdata);
    preds[3] += SearchResult_Tree_0_class_2.score0(fdata);
  }
}
class SearchResult_Tree_0_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.1f : 
        0.19999997f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
}

class SearchResult_Tree_0_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.1f : 
        0.19999997f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {00000010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {64, 0, 0, 0};
}

class SearchResult_Tree_0_class_2 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[0 /* currentStateIn */]) && (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.1f : 
        0.19999997f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {11011100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {59, 0, 0, 0};
}


class SearchResult_Forest_1 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += SearchResult_Tree_1_class_0.score0(fdata);
    preds[2] += SearchResult_Tree_1_class_1.score0(fdata);
    preds[3] += SearchResult_Tree_1_class_2.score0(fdata);
  }
}
class SearchResult_Tree_1_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09503717f : 
        0.16544242f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
}

class SearchResult_Tree_1_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09503717f : 
        0.16544242f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {00000010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {64, 0, 0, 0};
}

class SearchResult_Tree_1_class_2 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[0 /* currentStateIn */]) && (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09503717f : 
        0.16544242f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {11011100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {59, 0, 0, 0};
}


class SearchResult_Forest_2 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += SearchResult_Tree_2_class_0.score0(fdata);
    preds[2] += SearchResult_Tree_2_class_1.score0(fdata);
    preds[3] += SearchResult_Tree_2_class_2.score0(fdata);
  }
}
class SearchResult_Tree_2_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09089577f : 
        0.14279136f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
}

class SearchResult_Tree_2_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09089577f : 
        0.14279136f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {00000010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {64, 0, 0, 0};
}

class SearchResult_Tree_2_class_2 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[0 /* currentStateIn */]) && (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09089577f : 
        0.14279136f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {11011100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {59, 0, 0, 0};
}


class SearchResult_Forest_3 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += SearchResult_Tree_3_class_0.score0(fdata);
    preds[2] += SearchResult_Tree_3_class_1.score0(fdata);
    preds[3] += SearchResult_Tree_3_class_2.score0(fdata);
  }
}
class SearchResult_Tree_3_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08741831f : 
        0.12692769f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
}

class SearchResult_Tree_3_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08741831f : 
        0.12692769f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {00000010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {64, 0, 0, 0};
}

class SearchResult_Tree_3_class_2 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[0 /* currentStateIn */]) && (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08741831f : 
        0.12692769f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {11011100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {59, 0, 0, 0};
}


class SearchResult_Forest_4 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += SearchResult_Tree_4_class_0.score0(fdata);
    preds[2] += SearchResult_Tree_4_class_1.score0(fdata);
    preds[3] += SearchResult_Tree_4_class_2.score0(fdata);
  }
}
class SearchResult_Tree_4_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08448473f : 
        0.115301475f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
}

class SearchResult_Tree_4_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08448473f : 
        0.115301475f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {00000010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {64, 0, 0, 0};
}

class SearchResult_Tree_4_class_2 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[0 /* currentStateIn */]) && (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08448473f : 
        0.115301475f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {11011100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {59, 0, 0, 0};
}


class SearchResult_Forest_5 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += SearchResult_Tree_5_class_0.score0(fdata);
    preds[2] += SearchResult_Tree_5_class_1.score0(fdata);
    preds[3] += SearchResult_Tree_5_class_2.score0(fdata);
  }
}
class SearchResult_Tree_5_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.082000144f : 
        0.106493995f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
}

class SearchResult_Tree_5_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.082000144f : 
        0.106493995f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {00000010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {64, 0, 0, 0};
}

class SearchResult_Tree_5_class_2 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[0 /* currentStateIn */]) && (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.082000144f : 
        0.106493995f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {11011100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {59, 0, 0, 0};
}


class SearchResult_Forest_6 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += SearchResult_Tree_6_class_0.score0(fdata);
    preds[2] += SearchResult_Tree_6_class_1.score0(fdata);
    preds[3] += SearchResult_Tree_6_class_2.score0(fdata);
  }
}
class SearchResult_Tree_6_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.079888366f : 
        0.09965187f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
}

class SearchResult_Tree_6_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.079888366f : 
        0.09965187f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {00000010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {64, 0, 0, 0};
}

class SearchResult_Tree_6_class_2 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[0 /* currentStateIn */]) && (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.079888366f : 
        0.09965187f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {11011100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {59, 0, 0, 0};
}


class SearchResult_Forest_7 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += SearchResult_Tree_7_class_0.score0(fdata);
    preds[2] += SearchResult_Tree_7_class_1.score0(fdata);
    preds[3] += SearchResult_Tree_7_class_2.score0(fdata);
  }
}
class SearchResult_Tree_7_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.078087695f : 
        0.0942309f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
}

class SearchResult_Tree_7_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.078087695f : 
        0.0942309f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {00000010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {64, 0, 0, 0};
}

class SearchResult_Tree_7_class_2 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[0 /* currentStateIn */]) && (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.078087695f : 
        0.0942309f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {11011100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {59, 0, 0, 0};
}


class SearchResult_Forest_8 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += SearchResult_Tree_8_class_0.score0(fdata);
    preds[2] += SearchResult_Tree_8_class_1.score0(fdata);
    preds[3] += SearchResult_Tree_8_class_2.score0(fdata);
  }
}
class SearchResult_Tree_8_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.076547824f : 
        0.08986778f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
}

class SearchResult_Tree_8_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.076547824f : 
        0.08986778f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {00000010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {64, 0, 0, 0};
}

class SearchResult_Tree_8_class_2 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[0 /* currentStateIn */]) && (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.076547824f : 
        0.08986778f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {11011100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {59, 0, 0, 0};
}


class SearchResult_Forest_9 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += SearchResult_Tree_9_class_0.score0(fdata);
    preds[2] += SearchResult_Tree_9_class_1.score0(fdata);
    preds[3] += SearchResult_Tree_9_class_2.score0(fdata);
  }
}
class SearchResult_Tree_9_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.07522751f : 
        0.086310916f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
}

class SearchResult_Tree_9_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.07522751f : 
        0.086310916f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {00000010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {64, 0, 0, 0};
}

class SearchResult_Tree_9_class_2 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[0 /* currentStateIn */]) && (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.07522751f : 
        0.086310916f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {11011100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {59, 0, 0, 0};
}


class SearchResult_Forest_10 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += SearchResult_Tree_10_class_0.score0(fdata);
    preds[2] += SearchResult_Tree_10_class_1.score0(fdata);
    preds[3] += SearchResult_Tree_10_class_2.score0(fdata);
  }
}
class SearchResult_Tree_10_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.07409277f : 
        0.083380654f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
}

class SearchResult_Tree_10_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.07409277f : 
        0.083380654f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {00000010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {64, 0, 0, 0};
}

class SearchResult_Tree_10_class_2 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[0 /* currentStateIn */]) && (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.07409277f : 
        0.083380654f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {11011100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {59, 0, 0, 0};
}


class SearchResult_Forest_11 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += SearchResult_Tree_11_class_0.score0(fdata);
    preds[2] += SearchResult_Tree_11_class_1.score0(fdata);
    preds[3] += SearchResult_Tree_11_class_2.score0(fdata);
  }
}
class SearchResult_Tree_11_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.07311544f : 
        0.08094542f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
}

class SearchResult_Tree_11_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.07311544f : 
        0.08094542f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {00000010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {64, 0, 0, 0};
}

class SearchResult_Tree_11_class_2 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[0 /* currentStateIn */]) && (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.07311544f : 
        0.08094542f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {11011100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {59, 0, 0, 0};
}


class SearchResult_Forest_12 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += SearchResult_Tree_12_class_0.score0(fdata);
    preds[2] += SearchResult_Tree_12_class_1.score0(fdata);
    preds[3] += SearchResult_Tree_12_class_2.score0(fdata);
  }
}
class SearchResult_Tree_12_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.07227211f : 
        0.0789067f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
}

class SearchResult_Tree_12_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.07227211f : 
        0.0789067f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {00000010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {64, 0, 0, 0};
}

class SearchResult_Tree_12_class_2 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[0 /* currentStateIn */]) && (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.07227211f : 
        0.0789067f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {11011100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {59, 0, 0, 0};
}


class SearchResult_Forest_13 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += SearchResult_Tree_13_class_0.score0(fdata);
    preds[2] += SearchResult_Tree_13_class_1.score0(fdata);
    preds[3] += SearchResult_Tree_13_class_2.score0(fdata);
  }
}
class SearchResult_Tree_13_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.07154316f : 
        0.077189356f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
}

class SearchResult_Tree_13_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.07154316f : 
        0.077189356f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {00000010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {64, 0, 0, 0};
}

class SearchResult_Tree_13_class_2 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[0 /* currentStateIn */]) && (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.07154316f : 
        0.077189356f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {11011100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {59, 0, 0, 0};
}


class SearchResult_Forest_14 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += SearchResult_Tree_14_class_0.score0(fdata);
    preds[2] += SearchResult_Tree_14_class_1.score0(fdata);
    preds[3] += SearchResult_Tree_14_class_2.score0(fdata);
  }
}
class SearchResult_Tree_14_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.07091214f : 
        0.075735115f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
}

class SearchResult_Tree_14_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.07091214f : 
        0.075735115f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {00000010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {64, 0, 0, 0};
}

class SearchResult_Tree_14_class_2 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[0 /* currentStateIn */]) && (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.07091214f : 
        0.075735115f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {11011100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {59, 0, 0, 0};
}


class SearchResult_Forest_15 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += SearchResult_Tree_15_class_0.score0(fdata);
    preds[2] += SearchResult_Tree_15_class_1.score0(fdata);
    preds[3] += SearchResult_Tree_15_class_2.score0(fdata);
  }
}
class SearchResult_Tree_15_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.070365176f : 
        0.07449816f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
}

class SearchResult_Tree_15_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.070365176f : 
        0.07449816f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {00000010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {64, 0, 0, 0};
}

class SearchResult_Tree_15_class_2 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[0 /* currentStateIn */]) && (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.070365176f : 
        0.07449816f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {11011100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {59, 0, 0, 0};
}


class SearchResult_Forest_16 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += SearchResult_Tree_16_class_0.score0(fdata);
    preds[2] += SearchResult_Tree_16_class_1.score0(fdata);
    preds[3] += SearchResult_Tree_16_class_2.score0(fdata);
  }
}
class SearchResult_Tree_16_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.06989052f : 
        0.07344201f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
}

class SearchResult_Tree_16_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.06989052f : 
        0.07344201f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {00000010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {64, 0, 0, 0};
}

class SearchResult_Tree_16_class_2 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[0 /* currentStateIn */]) && (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.06989052f : 
        0.07344201f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {11011100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {59, 0, 0, 0};
}


class SearchResult_Forest_17 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += SearchResult_Tree_17_class_0.score0(fdata);
    preds[2] += SearchResult_Tree_17_class_1.score0(fdata);
    preds[3] += SearchResult_Tree_17_class_2.score0(fdata);
  }
}
class SearchResult_Tree_17_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.06947818f : 
        0.07253727f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
}

class SearchResult_Tree_17_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.06947818f : 
        0.07253727f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {00000010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {64, 0, 0, 0};
}

class SearchResult_Tree_17_class_2 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[0 /* currentStateIn */]) && (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.06947818f : 
        0.07253727f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {11011100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {59, 0, 0, 0};
}


class SearchResult_Forest_18 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += SearchResult_Tree_18_class_0.score0(fdata);
    preds[2] += SearchResult_Tree_18_class_1.score0(fdata);
    preds[3] += SearchResult_Tree_18_class_2.score0(fdata);
  }
}
class SearchResult_Tree_18_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.069119655f : 
        0.07176005f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
}

class SearchResult_Tree_18_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.069119655f : 
        0.07176005f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {00000010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {64, 0, 0, 0};
}

class SearchResult_Tree_18_class_2 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[0 /* currentStateIn */]) && (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.069119655f : 
        0.07176005f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {11011100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {59, 0, 0, 0};
}


class SearchResult_Forest_19 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += SearchResult_Tree_19_class_0.score0(fdata);
    preds[2] += SearchResult_Tree_19_class_1.score0(fdata);
    preds[3] += SearchResult_Tree_19_class_2.score0(fdata);
  }
}
class SearchResult_Tree_19_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.06880767f : 
        0.07109075f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
}

class SearchResult_Tree_19_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.06880767f : 
        0.07109075f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {00000010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {64, 0, 0, 0};
}

class SearchResult_Tree_19_class_2 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[0 /* currentStateIn */]) && (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.06880767f : 
        0.07109075f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {11011100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {59, 0, 0, 0};
}


class SearchResult_Forest_20 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += SearchResult_Tree_20_class_0.score0(fdata);
    preds[2] += SearchResult_Tree_20_class_1.score0(fdata);
    preds[3] += SearchResult_Tree_20_class_2.score0(fdata);
  }
}
class SearchResult_Tree_20_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.06853599f : 
        0.07051317f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
}

class SearchResult_Tree_20_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.06853599f : 
        0.07051317f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {00000010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {64, 0, 0, 0};
}

class SearchResult_Tree_20_class_2 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[0 /* currentStateIn */]) && (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.06853599f : 
        0.07051317f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {11011100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {59, 0, 0, 0};
}


class SearchResult_Forest_21 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += SearchResult_Tree_21_class_0.score0(fdata);
    preds[2] += SearchResult_Tree_21_class_1.score0(fdata);
    preds[3] += SearchResult_Tree_21_class_2.score0(fdata);
  }
}
class SearchResult_Tree_21_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.06829926f : 
        0.070013836f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
}

class SearchResult_Tree_21_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.06829926f : 
        0.070013836f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {00000010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {64, 0, 0, 0};
}

class SearchResult_Tree_21_class_2 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[0 /* currentStateIn */]) && (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.06829926f : 
        0.070013836f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {11011100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {59, 0, 0, 0};
}


class SearchResult_Forest_22 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += SearchResult_Tree_22_class_0.score0(fdata);
    preds[2] += SearchResult_Tree_22_class_1.score0(fdata);
    preds[3] += SearchResult_Tree_22_class_2.score0(fdata);
  }
}
class SearchResult_Tree_22_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.06809289f : 
        0.06958147f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
}

class SearchResult_Tree_22_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.06809289f : 
        0.06958147f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {00000010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {64, 0, 0, 0};
}

class SearchResult_Tree_22_class_2 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[0 /* currentStateIn */]) && (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.06809289f : 
        0.06958147f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {11011100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {59, 0, 0, 0};
}


class SearchResult_Forest_23 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += SearchResult_Tree_23_class_0.score0(fdata);
    preds[2] += SearchResult_Tree_23_class_1.score0(fdata);
    preds[3] += SearchResult_Tree_23_class_2.score0(fdata);
  }
}
class SearchResult_Tree_23_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.067912884f : 
        0.06920657f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
}

class SearchResult_Tree_23_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.067912884f : 
        0.06920657f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {00000010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {64, 0, 0, 0};
}

class SearchResult_Tree_23_class_2 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[0 /* currentStateIn */]) && (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.067912884f : 
        0.06920657f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {11011100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {59, 0, 0, 0};
}


class SearchResult_Forest_24 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += SearchResult_Tree_24_class_0.score0(fdata);
    preds[2] += SearchResult_Tree_24_class_1.score0(fdata);
    preds[3] += SearchResult_Tree_24_class_2.score0(fdata);
  }
}
class SearchResult_Tree_24_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.0677558f : 
        0.068881124f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
}

class SearchResult_Tree_24_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.0677558f : 
        0.068881124f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {00000010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {64, 0, 0, 0};
}

class SearchResult_Tree_24_class_2 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[0 /* currentStateIn */]) && (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.0677558f : 
        0.068881124f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {11011100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {59, 0, 0, 0};
}


class SearchResult_Forest_25 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += SearchResult_Tree_25_class_0.score0(fdata);
    preds[2] += SearchResult_Tree_25_class_1.score0(fdata);
    preds[3] += SearchResult_Tree_25_class_2.score0(fdata);
  }
}
class SearchResult_Tree_25_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.0676187f : 
        0.068598315f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
}

class SearchResult_Tree_25_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.0676187f : 
        0.068598315f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {00000010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {64, 0, 0, 0};
}

class SearchResult_Tree_25_class_2 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[0 /* currentStateIn */]) && (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.0676187f : 
        0.068598315f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {11011100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {59, 0, 0, 0};
}


class SearchResult_Forest_26 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += SearchResult_Tree_26_class_0.score0(fdata);
    preds[2] += SearchResult_Tree_26_class_1.score0(fdata);
    preds[3] += SearchResult_Tree_26_class_2.score0(fdata);
  }
}
class SearchResult_Tree_26_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.067498975f : 
        0.06835232f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
}

class SearchResult_Tree_26_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.067498975f : 
        0.06835232f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {00000010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {64, 0, 0, 0};
}

class SearchResult_Tree_26_class_2 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[0 /* currentStateIn */]) && (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.067498975f : 
        0.06835232f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {11011100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {59, 0, 0, 0};
}


class SearchResult_Forest_27 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += SearchResult_Tree_27_class_0.score0(fdata);
    preds[2] += SearchResult_Tree_27_class_1.score0(fdata);
    preds[3] += SearchResult_Tree_27_class_2.score0(fdata);
  }
}
class SearchResult_Tree_27_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.0673944f : 
        0.0681382f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
}

class SearchResult_Tree_27_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.0673944f : 
        0.0681382f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {00000010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {64, 0, 0, 0};
}

class SearchResult_Tree_27_class_2 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[0 /* currentStateIn */]) && (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.0673944f : 
        0.0681382f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {11011100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {59, 0, 0, 0};
}


class SearchResult_Forest_28 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += SearchResult_Tree_28_class_0.score0(fdata);
    preds[2] += SearchResult_Tree_28_class_1.score0(fdata);
    preds[3] += SearchResult_Tree_28_class_2.score0(fdata);
  }
}
class SearchResult_Tree_28_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.06730304f : 
        0.06795168f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
}

class SearchResult_Tree_28_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.06730304f : 
        0.06795168f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {00000010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {64, 0, 0, 0};
}

class SearchResult_Tree_28_class_2 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[0 /* currentStateIn */]) && (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.06730304f : 
        0.06795168f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {11011100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {59, 0, 0, 0};
}


class SearchResult_Forest_29 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += SearchResult_Tree_29_class_0.score0(fdata);
    preds[2] += SearchResult_Tree_29_class_1.score0(fdata);
    preds[3] += SearchResult_Tree_29_class_2.score0(fdata);
  }
}
class SearchResult_Tree_29_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.067223206f : 
        0.067789115f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {00100000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
}

class SearchResult_Tree_29_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.067223206f : 
        0.067789115f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {00000010 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {64, 0, 0, 0};
}

class SearchResult_Tree_29_class_2 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[0 /* currentStateIn */]) && (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.067223206f : 
        0.067789115f);
    return pred;
  } // constant pool size = 11B, number of visited nodes = 1, static init size = 30B
  // {11011100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {59, 0, 0, 0};
}


