

/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2020-01-21T23:34:04.195-05:00
  3.24.0.5
  
  Standalone prediction code with sample test data for GBMModel named TrieModelSwitch

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://192.168.0.103:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://192.168.0.103:54321/3/Models.java/TrieModelSwitch > TrieModelSwitch.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m TrieModelSwitch.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="TrieModelSwitch", algorithm="gbm")
public class TrieModelSwitch extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }

  public boolean isSupervised() { return true; }
  public int nfeatures() { return 1; }
  public int nclasses() { return 3; }

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_TrieModelSwitch.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 3;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* parentNodeIdIn */ null,
    /* parentGroup */ TrieModelSwitch_ColInfo_1.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.24519940915805022,0.23338257016248154,0.5214180206794683};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = {0.24519940915805022,0.23338257016248154,0.5214180206794683};

  public TrieModelSwitch() { super(NAMES,DOMAINS,"parentGroup"); }
  public String getUUID() { return Long.toString(-4047710982283864072L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    TrieModelSwitch_Forest_0.score0(data,preds);
    TrieModelSwitch_Forest_1.score0(data,preds);
    TrieModelSwitch_Forest_2.score0(data,preds);
    TrieModelSwitch_Forest_3.score0(data,preds);
    TrieModelSwitch_Forest_4.score0(data,preds);
    TrieModelSwitch_Forest_5.score0(data,preds);
    TrieModelSwitch_Forest_6.score0(data,preds);
    TrieModelSwitch_Forest_7.score0(data,preds);
    TrieModelSwitch_Forest_8.score0(data,preds);
    TrieModelSwitch_Forest_9.score0(data,preds);
    TrieModelSwitch_Forest_10.score0(data,preds);
    TrieModelSwitch_Forest_11.score0(data,preds);
    TrieModelSwitch_Forest_12.score0(data,preds);
    TrieModelSwitch_Forest_13.score0(data,preds);
    TrieModelSwitch_Forest_14.score0(data,preds);
    TrieModelSwitch_Forest_15.score0(data,preds);
    TrieModelSwitch_Forest_16.score0(data,preds);
    TrieModelSwitch_Forest_17.score0(data,preds);
    TrieModelSwitch_Forest_18.score0(data,preds);
    TrieModelSwitch_Forest_19.score0(data,preds);
    TrieModelSwitch_Forest_20.score0(data,preds);
    TrieModelSwitch_Forest_21.score0(data,preds);
    TrieModelSwitch_Forest_22.score0(data,preds);
    TrieModelSwitch_Forest_23.score0(data,preds);
    TrieModelSwitch_Forest_24.score0(data,preds);
    TrieModelSwitch_Forest_25.score0(data,preds);
    TrieModelSwitch_Forest_26.score0(data,preds);
    TrieModelSwitch_Forest_27.score0(data,preds);
    TrieModelSwitch_Forest_28.score0(data,preds);
    TrieModelSwitch_Forest_29.score0(data,preds);
    hex.genmodel.GenModel.GBM_rescale(preds);
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// The class representing training column names
class NamesHolder_TrieModelSwitch implements java.io.Serializable {
  public static final String[] VALUES = new String[1];
  static {
    NamesHolder_TrieModelSwitch_0.fill(VALUES);
  }
  static final class NamesHolder_TrieModelSwitch_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "parentNodeIdIn";
    }
  }
}
// The class representing column parentGroup
class TrieModelSwitch_ColInfo_1 implements java.io.Serializable {
  public static final String[] VALUES = new String[3];
  static {
    TrieModelSwitch_ColInfo_1_0.fill(VALUES);
  }
  static final class TrieModelSwitch_ColInfo_1_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "0";
      sa[1] = "1";
      sa[2] = "2";
    }
  }
}

class TrieModelSwitch_Forest_0 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += TrieModelSwitch_Tree_0_class_0.score0(fdata);
    preds[2] += TrieModelSwitch_Tree_0_class_1.score0(fdata);
    preds[3] += TrieModelSwitch_Tree_0_class_2.score0(fdata);
  }
}
class TrieModelSwitch_Tree_0_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* parentNodeIdIn */] <614.0f ? 
        0.19820356f : 
        -0.1f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieModelSwitch_Tree_0_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* parentNodeIdIn */] <1191.5f ? 
        0.046749216f : 
        -0.1f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieModelSwitch_Tree_0_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* parentNodeIdIn */] <1191.5f ? 
        -0.1f : 
        0.19999997f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class TrieModelSwitch_Forest_1 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += TrieModelSwitch_Tree_1_class_0.score0(fdata);
    preds[2] += TrieModelSwitch_Tree_1_class_1.score0(fdata);
    preds[3] += TrieModelSwitch_Tree_1_class_2.score0(fdata);
  }
}
class TrieModelSwitch_Tree_1_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* parentNodeIdIn */] <608.0f ? 
        0.17339234f : 
        -0.0952703f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieModelSwitch_Tree_1_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* parentNodeIdIn */] <1191.5f ? 
        0.041529585f : 
        -0.09503725f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieModelSwitch_Tree_1_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* parentNodeIdIn */] <1191.5f ? 
        -0.09541958f : 
        0.16544242f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class TrieModelSwitch_Forest_2 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += TrieModelSwitch_Tree_2_class_0.score0(fdata);
    preds[2] += TrieModelSwitch_Tree_2_class_1.score0(fdata);
    preds[3] += TrieModelSwitch_Tree_2_class_2.score0(fdata);
  }
}
class TrieModelSwitch_Tree_2_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* parentNodeIdIn */] <608.0f ? 
        0.15462354f : 
        -0.09172729f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieModelSwitch_Tree_2_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* parentNodeIdIn */] <1191.5f ? 
        0.03725704f : 
        -0.09089755f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieModelSwitch_Tree_2_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* parentNodeIdIn */] <1191.5f ? 
        -0.09191368f : 
        0.14278246f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class TrieModelSwitch_Forest_3 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += TrieModelSwitch_Tree_3_class_0.score0(fdata);
    preds[2] += TrieModelSwitch_Tree_3_class_1.score0(fdata);
    preds[3] += TrieModelSwitch_Tree_3_class_2.score0(fdata);
  }
}
class TrieModelSwitch_Tree_3_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* parentNodeIdIn */] <614.0f ? 
        0.13972928f : 
        -0.08934089f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieModelSwitch_Tree_3_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* parentNodeIdIn */] <1191.5f ? 
        0.033717237f : 
        -0.08742456f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieModelSwitch_Tree_3_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* parentNodeIdIn */] <1191.5f ? 
        -0.0891453f : 
        0.12689611f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class TrieModelSwitch_Forest_4 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += TrieModelSwitch_Tree_4_class_0.score0(fdata);
    preds[2] += TrieModelSwitch_Tree_4_class_1.score0(fdata);
    preds[3] += TrieModelSwitch_Tree_4_class_2.score0(fdata);
  }
}
class TrieModelSwitch_Tree_4_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* parentNodeIdIn */] <608.0f ? 
        0.13024111f : 
        -0.08616997f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieModelSwitch_Tree_4_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* parentNodeIdIn */] <1191.5f ? 
        0.030763455f : 
        -0.08449822f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieModelSwitch_Tree_4_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* parentNodeIdIn */] <1191.5f ? 
        -0.08689539f : 
        0.11523072f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class TrieModelSwitch_Forest_5 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += TrieModelSwitch_Tree_5_class_0.score0(fdata);
    preds[2] += TrieModelSwitch_Tree_5_class_1.score0(fdata);
    preds[3] += TrieModelSwitch_Tree_5_class_2.score0(fdata);
  }
}
class TrieModelSwitch_Tree_5_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* parentNodeIdIn */] <614.0f ? 
        0.12090778f : 
        -0.08464042f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieModelSwitch_Tree_5_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* parentNodeIdIn */] <1191.5f ? 
        0.02822187f : 
        -0.08201612f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieModelSwitch_Tree_5_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* parentNodeIdIn */] <1191.5f ? 
        -0.08503845f : 
        0.106405154f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class TrieModelSwitch_Forest_6 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += TrieModelSwitch_Tree_6_class_0.score0(fdata);
    preds[2] += TrieModelSwitch_Tree_6_class_1.score0(fdata);
    preds[3] += TrieModelSwitch_Tree_6_class_2.score0(fdata);
  }
}
class TrieModelSwitch_Tree_6_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* parentNodeIdIn */] <608.0f ? 
        0.11511264f : 
        -0.08210063f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieModelSwitch_Tree_6_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* parentNodeIdIn */] <608.0f ? 
        -0.09353482f : 
        0.013049095f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieModelSwitch_Tree_6_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* parentNodeIdIn */] <1191.5f ? 
        -0.0834641f : 
        0.09953766f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class TrieModelSwitch_Forest_7 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += TrieModelSwitch_Tree_7_class_0.score0(fdata);
    preds[2] += TrieModelSwitch_Tree_7_class_1.score0(fdata);
    preds[3] += TrieModelSwitch_Tree_7_class_2.score0(fdata);
  }
}
class TrieModelSwitch_Tree_7_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* parentNodeIdIn */] <614.0f ? 
        0.1052359f : 
        -0.08119539f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieModelSwitch_Tree_7_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* parentNodeIdIn */] <1191.5f ? 
        0.02882794f : 
        -0.079218306f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieModelSwitch_Tree_7_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* parentNodeIdIn */] <1191.5f ? 
        -0.08228936f : 
        0.095451005f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class TrieModelSwitch_Forest_8 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += TrieModelSwitch_Tree_8_class_0.score0(fdata);
    preds[2] += TrieModelSwitch_Tree_8_class_1.score0(fdata);
    preds[3] += TrieModelSwitch_Tree_8_class_2.score0(fdata);
  }
}
class TrieModelSwitch_Tree_8_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* parentNodeIdIn */] <608.0f ? 
        0.101984866f : 
        -0.07904964f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieModelSwitch_Tree_8_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* parentNodeIdIn */] <608.0f ? 
        -0.08816473f : 
        0.015033906f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieModelSwitch_Tree_8_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* parentNodeIdIn */] <1191.5f ? 
        -0.081034444f : 
        0.09081522f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class TrieModelSwitch_Forest_9 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += TrieModelSwitch_Tree_9_class_0.score0(fdata);
    preds[2] += TrieModelSwitch_Tree_9_class_1.score0(fdata);
    preds[3] += TrieModelSwitch_Tree_9_class_2.score0(fdata);
  }
}
class TrieModelSwitch_Tree_9_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* parentNodeIdIn */] <614.0f ? 
        0.09505051f : 
        -0.078666754f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieModelSwitch_Tree_9_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* parentNodeIdIn */] <1191.5f ? 
        0.029131046f : 
        -0.07694755f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieModelSwitch_Tree_9_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* parentNodeIdIn */] <1191.5f ? 
        -0.08004955f : 
        0.08810019f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class TrieModelSwitch_Forest_10 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += TrieModelSwitch_Tree_10_class_0.score0(fdata);
    preds[2] += TrieModelSwitch_Tree_10_class_1.score0(fdata);
    preds[3] += TrieModelSwitch_Tree_10_class_2.score0(fdata);
  }
}
class TrieModelSwitch_Tree_10_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* parentNodeIdIn */] <614.0f ? 
        0.09223098f : 
        -0.07760762f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieModelSwitch_Tree_10_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* parentNodeIdIn */] <608.0f ? 
        -0.08401888f : 
        0.016584236f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieModelSwitch_Tree_10_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* parentNodeIdIn */] <1191.5f ? 
        -0.079009764f : 
        0.08482508f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class TrieModelSwitch_Forest_11 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += TrieModelSwitch_Tree_11_class_0.score0(fdata);
    preds[2] += TrieModelSwitch_Tree_11_class_1.score0(fdata);
    preds[3] += TrieModelSwitch_Tree_11_class_2.score0(fdata);
  }
}
class TrieModelSwitch_Tree_11_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* parentNodeIdIn */] <608.0f ? 
        0.08896311f : 
        -0.07581875f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieModelSwitch_Tree_11_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* parentNodeIdIn */] <1191.5f ? 
        0.029223217f : 
        -0.07510703f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieModelSwitch_Tree_11_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* parentNodeIdIn */] <1191.5f ? 
        -0.0781643f : 
        0.08294102f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class TrieModelSwitch_Forest_12 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += TrieModelSwitch_Tree_12_class_0.score0(fdata);
    preds[2] += TrieModelSwitch_Tree_12_class_1.score0(fdata);
    preds[3] += TrieModelSwitch_Tree_12_class_2.score0(fdata);
  }
}
class TrieModelSwitch_Tree_12_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* parentNodeIdIn */] <614.0f ? 
        0.0860362f : 
        -0.07589051f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieModelSwitch_Tree_12_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* parentNodeIdIn */] <608.0f ? 
        -0.08079822f : 
        0.017675098f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieModelSwitch_Tree_12_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* parentNodeIdIn */] <1191.5f ? 
        -0.07728242f : 
        0.08055763f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class TrieModelSwitch_Forest_13 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += TrieModelSwitch_Tree_13_class_0.score0(fdata);
    preds[2] += TrieModelSwitch_Tree_13_class_1.score0(fdata);
    preds[3] += TrieModelSwitch_Tree_13_class_2.score0(fdata);
  }
}
class TrieModelSwitch_Tree_13_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* parentNodeIdIn */] <614.0f ? 
        0.08275083f : 
        -0.07519433f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieModelSwitch_Tree_13_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* parentNodeIdIn */] <1191.5f ? 
        0.02911903f : 
        -0.07361112f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieModelSwitch_Tree_13_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* parentNodeIdIn */] <1191.5f ? 
        -0.07655018f : 
        0.0792138f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class TrieModelSwitch_Forest_14 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += TrieModelSwitch_Tree_14_class_0.score0(fdata);
    preds[2] += TrieModelSwitch_Tree_14_class_1.score0(fdata);
    preds[3] += TrieModelSwitch_Tree_14_class_2.score0(fdata);
  }
}
class TrieModelSwitch_Tree_14_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* parentNodeIdIn */] <608.0f ? 
        0.08263638f : 
        -0.07340561f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieModelSwitch_Tree_14_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* parentNodeIdIn */] <608.0f ? 
        -0.078233644f : 
        0.018605f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieModelSwitch_Tree_14_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* parentNodeIdIn */] <1191.5f ? 
        -0.075788125f : 
        0.077428736f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class TrieModelSwitch_Forest_15 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += TrieModelSwitch_Tree_15_class_0.score0(fdata);
    preds[2] += TrieModelSwitch_Tree_15_class_1.score0(fdata);
    preds[3] += TrieModelSwitch_Tree_15_class_2.score0(fdata);
  }
}
class TrieModelSwitch_Tree_15_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* parentNodeIdIn */] <614.0f ? 
        0.07895445f : 
        -0.07394409f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieModelSwitch_Tree_15_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* parentNodeIdIn */] <1191.5f ? 
        0.028891537f : 
        -0.0723929f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieModelSwitch_Tree_15_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* parentNodeIdIn */] <1191.5f ? 
        -0.07515047f : 
        0.07645387f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class TrieModelSwitch_Forest_16 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += TrieModelSwitch_Tree_16_class_0.score0(fdata);
    preds[2] += TrieModelSwitch_Tree_16_class_1.score0(fdata);
    preds[3] += TrieModelSwitch_Tree_16_class_2.score0(fdata);
  }
}
class TrieModelSwitch_Tree_16_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* parentNodeIdIn */] <614.0f ? 
        0.07783486f : 
        -0.07336751f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieModelSwitch_Tree_16_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* parentNodeIdIn */] <608.0f ? 
        -0.07617071f : 
        0.01924013f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieModelSwitch_Tree_16_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* parentNodeIdIn */] <1191.5f ? 
        -0.07448981f : 
        0.075095326f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class TrieModelSwitch_Forest_17 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += TrieModelSwitch_Tree_17_class_0.score0(fdata);
    preds[2] += TrieModelSwitch_Tree_17_class_1.score0(fdata);
    preds[3] += TrieModelSwitch_Tree_17_class_2.score0(fdata);
  }
}
class TrieModelSwitch_Tree_17_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* parentNodeIdIn */] <608.0f ? 
        0.07750583f : 
        -0.07154038f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieModelSwitch_Tree_17_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* parentNodeIdIn */] <1191.5f ? 
        0.028614838f : 
        -0.07139779f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieModelSwitch_Tree_17_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* parentNodeIdIn */] <1191.5f ? 
        -0.07393193f : 
        0.07436859f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class TrieModelSwitch_Forest_18 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += TrieModelSwitch_Tree_18_class_0.score0(fdata);
    preds[2] += TrieModelSwitch_Tree_18_class_1.score0(fdata);
    preds[3] += TrieModelSwitch_Tree_18_class_2.score0(fdata);
  }
}
class TrieModelSwitch_Tree_18_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* parentNodeIdIn */] <614.0f ? 
        0.07514585f : 
        -0.07241177f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieModelSwitch_Tree_18_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* parentNodeIdIn */] <608.0f ? 
        -0.07450716f : 
        0.019688526f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieModelSwitch_Tree_18_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* parentNodeIdIn */] <1191.5f ? 
        -0.07335985f : 
        0.073323555f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class TrieModelSwitch_Forest_19 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += TrieModelSwitch_Tree_19_class_0.score0(fdata);
    preds[2] += TrieModelSwitch_Tree_19_class_1.score0(fdata);
    preds[3] += TrieModelSwitch_Tree_19_class_2.score0(fdata);
  }
}
class TrieModelSwitch_Tree_19_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* parentNodeIdIn */] <614.0f ? 
        0.073458225f : 
        -0.072007775f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieModelSwitch_Tree_19_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* parentNodeIdIn */] <1191.5f ? 
        0.028258933f : 
        -0.07058203f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieModelSwitch_Tree_19_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* parentNodeIdIn */] <1191.5f ? 
        -0.072873846f : 
        0.07277623f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class TrieModelSwitch_Forest_20 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += TrieModelSwitch_Tree_20_class_0.score0(fdata);
    preds[2] += TrieModelSwitch_Tree_20_class_1.score0(fdata);
    preds[3] += TrieModelSwitch_Tree_20_class_2.score0(fdata);
  }
}
class TrieModelSwitch_Tree_20_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* parentNodeIdIn */] <608.0f ? 
        0.07482122f : 
        -0.0698891f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieModelSwitch_Tree_20_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* parentNodeIdIn */] <608.0f ? 
        -0.07316833f : 
        0.020072537f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieModelSwitch_Tree_20_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* parentNodeIdIn */] <1191.5f ? 
        -0.07237804f : 
        0.0719577f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class TrieModelSwitch_Forest_21 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += TrieModelSwitch_Tree_21_class_0.score0(fdata);
    preds[2] += TrieModelSwitch_Tree_21_class_1.score0(fdata);
    preds[3] += TrieModelSwitch_Tree_21_class_2.score0(fdata);
  }
}
class TrieModelSwitch_Tree_21_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* parentNodeIdIn */] <614.0f ? 
        0.07157128f : 
        -0.07125119f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieModelSwitch_Tree_21_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* parentNodeIdIn */] <1191.5f ? 
        0.027869077f : 
        -0.06991194f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieModelSwitch_Tree_21_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* parentNodeIdIn */] <1191.5f ? 
        -0.07195664f : 
        0.071543895f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class TrieModelSwitch_Forest_22 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += TrieModelSwitch_Tree_22_class_0.score0(fdata);
    preds[2] += TrieModelSwitch_Tree_22_class_1.score0(fdata);
    preds[3] += TrieModelSwitch_Tree_22_class_2.score0(fdata);
  }
}
class TrieModelSwitch_Tree_22_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* parentNodeIdIn */] <614.0f ? 
        0.07092698f : 
        -0.07089284f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieModelSwitch_Tree_22_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* parentNodeIdIn */] <608.0f ? 
        -0.07206452f : 
        0.020275991f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieModelSwitch_Tree_22_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* parentNodeIdIn */] <1191.5f ? 
        -0.07152933f : 
        0.07089875f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class TrieModelSwitch_Forest_23 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += TrieModelSwitch_Tree_23_class_0.score0(fdata);
    preds[2] += TrieModelSwitch_Tree_23_class_1.score0(fdata);
    preds[3] += TrieModelSwitch_Tree_23_class_2.score0(fdata);
  }
}
class TrieModelSwitch_Tree_23_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* parentNodeIdIn */] <608.0f ? 
        0.072400324f : 
        -0.068443164f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieModelSwitch_Tree_23_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* parentNodeIdIn */] <1191.5f ? 
        0.02749987f : 
        -0.06936001f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieModelSwitch_Tree_23_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* parentNodeIdIn */] <1191.5f ? 
        -0.07116437f : 
        0.07057824f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class TrieModelSwitch_Forest_24 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += TrieModelSwitch_Tree_24_class_0.score0(fdata);
    preds[2] += TrieModelSwitch_Tree_24_class_1.score0(fdata);
    preds[3] += TrieModelSwitch_Tree_24_class_2.score0(fdata);
  }
}
class TrieModelSwitch_Tree_24_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* parentNodeIdIn */] <614.0f ? 
        0.06942796f : 
        -0.07029302f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieModelSwitch_Tree_24_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* parentNodeIdIn */] <608.0f ? 
        -0.0711586f : 
        0.020399075f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieModelSwitch_Tree_24_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* parentNodeIdIn */] <1191.5f ? 
        -0.070798114f : 
        0.07006837f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class TrieModelSwitch_Forest_25 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += TrieModelSwitch_Tree_25_class_0.score0(fdata);
    preds[2] += TrieModelSwitch_Tree_25_class_1.score0(fdata);
    preds[3] += TrieModelSwitch_Tree_25_class_2.score0(fdata);
  }
}
class TrieModelSwitch_Tree_25_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* parentNodeIdIn */] <614.0f ? 
        0.06824937f : 
        -0.0700338f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieModelSwitch_Tree_25_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* parentNodeIdIn */] <1191.5f ? 
        0.027082985f : 
        -0.06890423f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieModelSwitch_Tree_25_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* parentNodeIdIn */] <1191.5f ? 
        -0.070483975f : 
        0.0698196f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class TrieModelSwitch_Forest_26 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += TrieModelSwitch_Tree_26_class_0.score0(fdata);
    preds[2] += TrieModelSwitch_Tree_26_class_1.score0(fdata);
    preds[3] += TrieModelSwitch_Tree_26_class_2.score0(fdata);
  }
}
class TrieModelSwitch_Tree_26_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* parentNodeIdIn */] <608.0f ? 
        0.07109832f : 
        -0.0670074f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieModelSwitch_Tree_26_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* parentNodeIdIn */] <608.0f ? 
        -0.07042363f : 
        0.020577455f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieModelSwitch_Tree_26_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* parentNodeIdIn */] <1191.5f ? 
        -0.070170015f : 
        0.069410324f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class TrieModelSwitch_Forest_27 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += TrieModelSwitch_Tree_27_class_0.score0(fdata);
    preds[2] += TrieModelSwitch_Tree_27_class_1.score0(fdata);
    preds[3] += TrieModelSwitch_Tree_27_class_2.score0(fdata);
  }
}
class TrieModelSwitch_Tree_27_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* parentNodeIdIn */] <614.0f ? 
        0.06703547f : 
        -0.06955233f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieModelSwitch_Tree_27_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* parentNodeIdIn */] <1191.5f ? 
        0.026650116f : 
        -0.06852745f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieModelSwitch_Tree_27_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* parentNodeIdIn */] <1191.5f ? 
        -0.0699009f : 
        0.069218166f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class TrieModelSwitch_Forest_28 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += TrieModelSwitch_Tree_28_class_0.score0(fdata);
    preds[2] += TrieModelSwitch_Tree_28_class_1.score0(fdata);
    preds[3] += TrieModelSwitch_Tree_28_class_2.score0(fdata);
  }
}
class TrieModelSwitch_Tree_28_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* parentNodeIdIn */] <614.0f ? 
        0.06649893f : 
        -0.06932433f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieModelSwitch_Tree_28_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* parentNodeIdIn */] <608.0f ? 
        -0.06980608f : 
        0.020595407f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieModelSwitch_Tree_28_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* parentNodeIdIn */] <1191.5f ? 
        -0.06963332f : 
        0.068889245f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class TrieModelSwitch_Forest_29 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += TrieModelSwitch_Tree_29_class_0.score0(fdata);
    preds[2] += TrieModelSwitch_Tree_29_class_1.score0(fdata);
    preds[3] += TrieModelSwitch_Tree_29_class_2.score0(fdata);
  }
}
class TrieModelSwitch_Tree_29_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* parentNodeIdIn */] <608.0f ? 
        0.06984757f : 
        -0.06559488f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieModelSwitch_Tree_29_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* parentNodeIdIn */] <1191.5f ? 
        0.02625917f : 
        -0.0682153f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieModelSwitch_Tree_29_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* parentNodeIdIn */] <1191.5f ? 
        -0.06940268f : 
        0.06873662f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


