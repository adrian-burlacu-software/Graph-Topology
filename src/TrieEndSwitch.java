

/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2020-01-21T23:34:36.640-05:00
  3.24.0.5
  
  Standalone prediction code with sample test data for GBMModel named TrieEndSwitch

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://192.168.0.103:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://192.168.0.103:54321/3/Models.java/TrieEndSwitch > TrieEndSwitch.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m TrieEndSwitch.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="TrieEndSwitch", algorithm="gbm")
public class TrieEndSwitch extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }

  public boolean isSupervised() { return true; }
  public int nfeatures() { return 1; }
  public int nclasses() { return 3; }

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_TrieEndSwitch.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 3;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* nodeIdIn */ null,
    /* parentGroupOut */ TrieEndSwitch_ColInfo_1.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.3322237017310253,0.33288948069241014,0.3348868175765646};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = {0.3322237017310253,0.33288948069241014,0.3348868175765646};

  public TrieEndSwitch() { super(NAMES,DOMAINS,"parentGroupOut"); }
  public String getUUID() { return Long.toString(-8257064102635148336L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    TrieEndSwitch_Forest_0.score0(data,preds);
    TrieEndSwitch_Forest_1.score0(data,preds);
    TrieEndSwitch_Forest_2.score0(data,preds);
    TrieEndSwitch_Forest_3.score0(data,preds);
    TrieEndSwitch_Forest_4.score0(data,preds);
    TrieEndSwitch_Forest_5.score0(data,preds);
    TrieEndSwitch_Forest_6.score0(data,preds);
    TrieEndSwitch_Forest_7.score0(data,preds);
    TrieEndSwitch_Forest_8.score0(data,preds);
    TrieEndSwitch_Forest_9.score0(data,preds);
    TrieEndSwitch_Forest_10.score0(data,preds);
    TrieEndSwitch_Forest_11.score0(data,preds);
    TrieEndSwitch_Forest_12.score0(data,preds);
    TrieEndSwitch_Forest_13.score0(data,preds);
    TrieEndSwitch_Forest_14.score0(data,preds);
    TrieEndSwitch_Forest_15.score0(data,preds);
    TrieEndSwitch_Forest_16.score0(data,preds);
    TrieEndSwitch_Forest_17.score0(data,preds);
    TrieEndSwitch_Forest_18.score0(data,preds);
    TrieEndSwitch_Forest_19.score0(data,preds);
    TrieEndSwitch_Forest_20.score0(data,preds);
    TrieEndSwitch_Forest_21.score0(data,preds);
    TrieEndSwitch_Forest_22.score0(data,preds);
    TrieEndSwitch_Forest_23.score0(data,preds);
    TrieEndSwitch_Forest_24.score0(data,preds);
    TrieEndSwitch_Forest_25.score0(data,preds);
    TrieEndSwitch_Forest_26.score0(data,preds);
    TrieEndSwitch_Forest_27.score0(data,preds);
    TrieEndSwitch_Forest_28.score0(data,preds);
    TrieEndSwitch_Forest_29.score0(data,preds);
    hex.genmodel.GenModel.GBM_rescale(preds);
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// The class representing training column names
class NamesHolder_TrieEndSwitch implements java.io.Serializable {
  public static final String[] VALUES = new String[1];
  static {
    NamesHolder_TrieEndSwitch_0.fill(VALUES);
  }
  static final class NamesHolder_TrieEndSwitch_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "nodeIdIn";
    }
  }
}
// The class representing column parentGroupOut
class TrieEndSwitch_ColInfo_1 implements java.io.Serializable {
  public static final String[] VALUES = new String[3];
  static {
    TrieEndSwitch_ColInfo_1_0.fill(VALUES);
  }
  static final class TrieEndSwitch_ColInfo_1_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "0";
      sa[1] = "1";
      sa[2] = "2";
    }
  }
}

class TrieEndSwitch_Forest_0 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += TrieEndSwitch_Tree_0_class_0.score0(fdata);
    preds[2] += TrieEndSwitch_Tree_0_class_1.score0(fdata);
    preds[3] += TrieEndSwitch_Tree_0_class_2.score0(fdata);
  }
}
class TrieEndSwitch_Tree_0_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <996.5f ? 
        0.19939998f : 
        -0.1f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieEndSwitch_Tree_0_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* nodeIdIn */] <1995.5f ? 
        0.05030059f : 
        -0.1f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieEndSwitch_Tree_0_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <1995.5f ? 
        -0.1f : 
        0.19999997f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class TrieEndSwitch_Forest_1 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += TrieEndSwitch_Tree_1_class_0.score0(fdata);
    preds[2] += TrieEndSwitch_Tree_1_class_1.score0(fdata);
    preds[3] += TrieEndSwitch_Tree_1_class_2.score0(fdata);
  }
}
class TrieEndSwitch_Tree_1_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <993.5f ? 
        0.17350008f : 
        -0.095997825f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieEndSwitch_Tree_1_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <993.5f ? 
        -0.09964102f : 
        0.049838275f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieEndSwitch_Tree_1_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <1995.5f ? 
        -0.0954205f : 
        0.16544242f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class TrieEndSwitch_Forest_2 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += TrieEndSwitch_Tree_2_class_0.score0(fdata);
    preds[2] += TrieEndSwitch_Tree_2_class_1.score0(fdata);
    preds[3] += TrieEndSwitch_Tree_2_class_2.score0(fdata);
  }
}
class TrieEndSwitch_Tree_2_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <993.5f ? 
        0.1481245f : 
        -0.09215255f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieEndSwitch_Tree_2_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* nodeIdIn */] <1995.5f ? 
        0.045299765f : 
        -0.09467532f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieEndSwitch_Tree_2_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <1995.5f ? 
        -0.09243808f : 
        0.14868855f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class TrieEndSwitch_Forest_3 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += TrieEndSwitch_Tree_3_class_0.score0(fdata);
    preds[2] += TrieEndSwitch_Tree_3_class_1.score0(fdata);
    preds[3] += TrieEndSwitch_Tree_3_class_2.score0(fdata);
  }
}
class TrieEndSwitch_Tree_3_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <996.5f ? 
        0.13544297f : 
        -0.08983776f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieEndSwitch_Tree_3_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <993.5f ? 
        -0.09393822f : 
        0.045169696f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieEndSwitch_Tree_3_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <1995.5f ? 
        -0.08943526f : 
        0.13104601f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class TrieEndSwitch_Forest_4 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += TrieEndSwitch_Tree_4_class_0.score0(fdata);
    preds[2] += TrieEndSwitch_Tree_4_class_1.score0(fdata);
    preds[3] += TrieEndSwitch_Tree_4_class_2.score0(fdata);
  }
}
class TrieEndSwitch_Tree_4_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <996.5f ? 
        0.121380925f : 
        -0.08724134f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieEndSwitch_Tree_4_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* nodeIdIn */] <1995.5f ? 
        0.04163759f : 
        -0.08994078f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieEndSwitch_Tree_4_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <1995.5f ? 
        -0.08722759f : 
        0.12228425f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class TrieEndSwitch_Forest_5 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += TrieEndSwitch_Tree_5_class_0.score0(fdata);
    preds[2] += TrieEndSwitch_Tree_5_class_1.score0(fdata);
    preds[3] += TrieEndSwitch_Tree_5_class_2.score0(fdata);
  }
}
class TrieEndSwitch_Tree_5_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <993.5f ? 
        0.11484265f : 
        -0.084959954f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieEndSwitch_Tree_5_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <993.5f ? 
        -0.089117736f : 
        0.041705936f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieEndSwitch_Tree_5_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <1995.5f ? 
        -0.08510503f : 
        0.111701585f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class TrieEndSwitch_Forest_6 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += TrieEndSwitch_Tree_6_class_0.score0(fdata);
    preds[2] += TrieEndSwitch_Tree_6_class_1.score0(fdata);
    preds[3] += TrieEndSwitch_Tree_6_class_2.score0(fdata);
  }
}
class TrieEndSwitch_Tree_6_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <996.5f ? 
        0.10571353f : 
        -0.083410144f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieEndSwitch_Tree_6_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* nodeIdIn */] <1995.5f ? 
        0.03882274f : 
        -0.085915096f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieEndSwitch_Tree_6_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <1995.5f ? 
        -0.08340441f : 
        0.106501356f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class TrieEndSwitch_Forest_7 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += TrieEndSwitch_Tree_7_class_0.score0(fdata);
    preds[2] += TrieEndSwitch_Tree_7_class_1.score0(fdata);
    preds[3] += TrieEndSwitch_Tree_7_class_2.score0(fdata);
  }
}
class TrieEndSwitch_Tree_7_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <996.5f ? 
        0.10143925f : 
        -0.08188905f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieEndSwitch_Tree_7_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <993.5f ? 
        -0.085122526f : 
        0.03899368f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieEndSwitch_Tree_7_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <1995.5f ? 
        -0.081818365f : 
        0.099561855f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class TrieEndSwitch_Forest_8 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += TrieEndSwitch_Tree_8_class_0.score0(fdata);
    preds[2] += TrieEndSwitch_Tree_8_class_1.score0(fdata);
    preds[3] += TrieEndSwitch_Tree_8_class_2.score0(fdata);
  }
}
class TrieEndSwitch_Tree_8_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <993.5f ? 
        0.09583437f : 
        -0.0801001f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieEndSwitch_Tree_8_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* nodeIdIn */] <1995.5f ? 
        0.03658517f : 
        -0.082564816f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieEndSwitch_Tree_8_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <1995.5f ? 
        -0.080468446f : 
        0.096213624f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class TrieEndSwitch_Forest_9 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += TrieEndSwitch_Tree_9_class_0.score0(fdata);
    preds[2] += TrieEndSwitch_Tree_9_class_1.score0(fdata);
    preds[3] += TrieEndSwitch_Tree_9_class_2.score0(fdata);
  }
}
class TrieEndSwitch_Tree_9_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <996.5f ? 
        0.092692435f : 
        -0.079254806f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieEndSwitch_Tree_9_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <993.5f ? 
        -0.08185065f : 
        0.036812156f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieEndSwitch_Tree_9_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <1995.5f ? 
        -0.07923285f : 
        0.09139925f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class TrieEndSwitch_Forest_10 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += TrieEndSwitch_Tree_10_class_0.score0(fdata);
    preds[2] += TrieEndSwitch_Tree_10_class_1.score0(fdata);
    preds[3] += TrieEndSwitch_Tree_10_class_2.score0(fdata);
  }
}
class TrieEndSwitch_Tree_10_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <996.5f ? 
        0.088450894f : 
        -0.078130946f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieEndSwitch_Tree_10_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* nodeIdIn */] <1995.5f ? 
        0.03474695f : 
        -0.079801604f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieEndSwitch_Tree_10_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <1995.5f ? 
        -0.0781389f : 
        0.089127414f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class TrieEndSwitch_Forest_11 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += TrieEndSwitch_Tree_11_class_0.score0(fdata);
    preds[2] += TrieEndSwitch_Tree_11_class_1.score0(fdata);
    preds[3] += TrieEndSwitch_Tree_11_class_2.score0(fdata);
  }
}
class TrieEndSwitch_Tree_11_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <993.5f ? 
        0.08688896f : 
        -0.07671913f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieEndSwitch_Tree_11_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <993.5f ? 
        -0.07918403f : 
        0.035035115f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieEndSwitch_Tree_11_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <1995.5f ? 
        -0.07714718f : 
        0.08564731f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class TrieEndSwitch_Forest_12 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += TrieEndSwitch_Tree_12_class_0.score0(fdata);
    preds[2] += TrieEndSwitch_Tree_12_class_1.score0(fdata);
    preds[3] += TrieEndSwitch_Tree_12_class_2.score0(fdata);
  }
}
class TrieEndSwitch_Tree_12_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <996.5f ? 
        0.083414316f : 
        -0.076239884f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieEndSwitch_Tree_12_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* nodeIdIn */] <1995.5f ? 
        0.033212263f : 
        -0.07753161f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieEndSwitch_Tree_12_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <1995.5f ? 
        -0.076247856f : 
        0.08404867f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class TrieEndSwitch_Forest_13 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += TrieEndSwitch_Tree_13_class_0.score0(fdata);
    preds[2] += TrieEndSwitch_Tree_13_class_1.score0(fdata);
    preds[3] += TrieEndSwitch_Tree_13_class_2.score0(fdata);
  }
}
class TrieEndSwitch_Tree_13_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <996.5f ? 
        0.08198675f : 
        -0.07542681f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieEndSwitch_Tree_13_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <993.5f ? 
        -0.077003375f : 
        0.033534072f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieEndSwitch_Tree_13_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <1995.5f ? 
        -0.07543629f : 
        0.08146141f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class TrieEndSwitch_Forest_14 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += TrieEndSwitch_Tree_14_class_0.score0(fdata);
    preds[2] += TrieEndSwitch_Tree_14_class_1.score0(fdata);
    preds[3] += TrieEndSwitch_Tree_14_class_2.score0(fdata);
  }
}
class TrieEndSwitch_Tree_14_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <993.5f ? 
        0.08011386f : 
        -0.07416301f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieEndSwitch_Tree_14_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* nodeIdIn */] <1995.5f ? 
        0.031921715f : 
        -0.07566767f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieEndSwitch_Tree_14_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <1995.5f ? 
        -0.07469007f : 
        0.08029978f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class TrieEndSwitch_Forest_15 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += TrieEndSwitch_Tree_15_class_0.score0(fdata);
    preds[2] += TrieEndSwitch_Tree_15_class_1.score0(fdata);
    preds[3] += TrieEndSwitch_Tree_15_class_2.score0(fdata);
  }
}
class TrieEndSwitch_Tree_15_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <996.5f ? 
        0.07862417f : 
        -0.07400849f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieEndSwitch_Tree_15_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <993.5f ? 
        -0.075220264f : 
        0.03226264f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieEndSwitch_Tree_15_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <1995.5f ? 
        -0.07401784f : 
        0.07833623f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class TrieEndSwitch_Forest_16 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += TrieEndSwitch_Tree_16_class_0.score0(fdata);
    preds[2] += TrieEndSwitch_Tree_16_class_1.score0(fdata);
    preds[3] += TrieEndSwitch_Tree_16_class_2.score0(fdata);
  }
}
class TrieEndSwitch_Tree_16_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <996.5f ? 
        0.07677976f : 
        -0.073388495f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieEndSwitch_Tree_16_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* nodeIdIn */] <1995.5f ? 
        0.030808728f : 
        -0.07413496f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieEndSwitch_Tree_16_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <1995.5f ? 
        -0.07339526f : 
        0.077474475f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class TrieEndSwitch_Forest_17 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += TrieEndSwitch_Tree_17_class_0.score0(fdata);
    preds[2] += TrieEndSwitch_Tree_17_class_1.score0(fdata);
    preds[3] += TrieEndSwitch_Tree_17_class_2.score0(fdata);
  }
}
class TrieEndSwitch_Tree_17_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <993.5f ? 
        0.07656855f : 
        -0.07218283f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieEndSwitch_Tree_17_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <993.5f ? 
        -0.07376215f : 
        0.031198777f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieEndSwitch_Tree_17_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <1995.5f ? 
        -0.07283441f : 
        0.075955994f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class TrieEndSwitch_Forest_18 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += TrieEndSwitch_Tree_18_class_0.score0(fdata);
    preds[2] += TrieEndSwitch_Tree_18_class_1.score0(fdata);
    preds[3] += TrieEndSwitch_Tree_18_class_2.score0(fdata);
  }
}
class TrieEndSwitch_Tree_18_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <996.5f ? 
        0.07458883f : 
        -0.07231029f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieEndSwitch_Tree_18_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* nodeIdIn */] <1995.5f ? 
        0.029843906f : 
        -0.0728727f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieEndSwitch_Tree_18_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <1995.5f ? 
        -0.072313294f : 
        0.07530715f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class TrieEndSwitch_Forest_19 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += TrieEndSwitch_Tree_19_class_0.score0(fdata);
    preds[2] += TrieEndSwitch_Tree_19_class_1.score0(fdata);
    preds[3] += TrieEndSwitch_Tree_19_class_2.score0(fdata);
  }
}
class TrieEndSwitch_Tree_19_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <996.5f ? 
        0.07394403f : 
        -0.07183786f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieEndSwitch_Tree_19_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <993.5f ? 
        -0.072560266f : 
        0.030256797f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieEndSwitch_Tree_19_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <1995.5f ? 
        -0.07184364f : 
        0.07411823f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class TrieEndSwitch_Forest_20 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += TrieEndSwitch_Tree_20_class_0.score0(fdata);
    preds[2] += TrieEndSwitch_Tree_20_class_1.score0(fdata);
    preds[3] += TrieEndSwitch_Tree_20_class_2.score0(fdata);
  }
}
class TrieEndSwitch_Tree_20_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <996.5f ? 
        0.07274886f : 
        -0.07140398f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieEndSwitch_Tree_20_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* nodeIdIn */] <1995.5f ? 
        0.029011706f : 
        -0.07183093f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieEndSwitch_Tree_20_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <1995.5f ? 
        -0.07140666f : 
        0.07362019f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class TrieEndSwitch_Forest_21 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += TrieEndSwitch_Tree_21_class_0.score0(fdata);
    preds[2] += TrieEndSwitch_Tree_21_class_1.score0(fdata);
    preds[3] += TrieEndSwitch_Tree_21_class_2.score0(fdata);
  }
}
class TrieEndSwitch_Tree_21_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <993.5f ? 
        0.07308834f : 
        -0.07016102f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieEndSwitch_Tree_21_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <993.5f ? 
        -0.07157342f : 
        0.02946905f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieEndSwitch_Tree_21_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <1995.5f ? 
        -0.07101252f : 
        0.07267953f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class TrieEndSwitch_Forest_22 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += TrieEndSwitch_Tree_22_class_0.score0(fdata);
    preds[2] += TrieEndSwitch_Tree_22_class_1.score0(fdata);
    preds[3] += TrieEndSwitch_Tree_22_class_2.score0(fdata);
  }
}
class TrieEndSwitch_Tree_22_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <996.5f ? 
        0.07135175f : 
        -0.070647106f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieEndSwitch_Tree_22_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* nodeIdIn */] <1995.5f ? 
        0.028265288f : 
        -0.07096928f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieEndSwitch_Tree_22_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <1995.5f ? 
        -0.0706459f : 
        0.072294965f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class TrieEndSwitch_Forest_23 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += TrieEndSwitch_Tree_23_class_0.score0(fdata);
    preds[2] += TrieEndSwitch_Tree_23_class_1.score0(fdata);
    preds[3] += TrieEndSwitch_Tree_23_class_2.score0(fdata);
  }
}
class TrieEndSwitch_Tree_23_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <996.5f ? 
        0.070912406f : 
        -0.07031456f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieEndSwitch_Tree_23_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <993.5f ? 
        -0.07075474f : 
        0.02874531f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieEndSwitch_Tree_23_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <1995.5f ? 
        -0.070314944f : 
        0.07154407f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class TrieEndSwitch_Forest_24 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += TrieEndSwitch_Tree_24_class_0.score0(fdata);
    preds[2] += TrieEndSwitch_Tree_24_class_1.score0(fdata);
    preds[3] += TrieEndSwitch_Tree_24_class_2.score0(fdata);
  }
}
class TrieEndSwitch_Tree_24_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <993.5f ? 
        0.071191475f : 
        -0.06891795f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieEndSwitch_Tree_24_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* nodeIdIn */] <1995.5f ? 
        0.027613493f : 
        -0.07025518f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieEndSwitch_Tree_24_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <1995.5f ? 
        -0.07000711f : 
        0.07124233f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class TrieEndSwitch_Forest_25 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += TrieEndSwitch_Tree_25_class_0.score0(fdata);
    preds[2] += TrieEndSwitch_Tree_25_class_1.score0(fdata);
    preds[3] += TrieEndSwitch_Tree_25_class_2.score0(fdata);
  }
}
class TrieEndSwitch_Tree_25_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <996.5f ? 
        0.069834486f : 
        -0.06973282f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieEndSwitch_Tree_25_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <993.5f ? 
        -0.0700767f : 
        0.028101226f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieEndSwitch_Tree_25_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <1995.5f ? 
        -0.06972926f : 
        0.07063969f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class TrieEndSwitch_Forest_26 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += TrieEndSwitch_Tree_26_class_0.score0(fdata);
    preds[2] += TrieEndSwitch_Tree_26_class_1.score0(fdata);
    preds[3] += TrieEndSwitch_Tree_26_class_2.score0(fdata);
  }
}
class TrieEndSwitch_Tree_26_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <996.5f ? 
        0.06908555f : 
        -0.06947561f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieEndSwitch_Tree_26_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* nodeIdIn */] <1995.5f ? 
        0.027012955f : 
        -0.069662206f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieEndSwitch_Tree_26_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <1995.5f ? 
        -0.069470905f : 
        0.07040161f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class TrieEndSwitch_Forest_27 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += TrieEndSwitch_Tree_27_class_0.score0(fdata);
    preds[2] += TrieEndSwitch_Tree_27_class_1.score0(fdata);
    preds[3] += TrieEndSwitch_Tree_27_class_2.score0(fdata);
  }
}
class TrieEndSwitch_Tree_27_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <993.5f ? 
        0.070148475f : 
        -0.06782819f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieEndSwitch_Tree_27_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* nodeIdIn */] <993.5f ? 
        -0.069518596f : 
        0.027561966f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieEndSwitch_Tree_27_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <1995.5f ? 
        -0.069237374f : 
        0.06991358f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class TrieEndSwitch_Forest_28 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += TrieEndSwitch_Tree_28_class_0.score0(fdata);
    preds[2] += TrieEndSwitch_Tree_28_class_1.score0(fdata);
    preds[3] += TrieEndSwitch_Tree_28_class_2.score0(fdata);
  }
}
class TrieEndSwitch_Tree_28_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <996.5f ? 
        0.06826201f : 
        -0.06902835f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieEndSwitch_Tree_28_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* nodeIdIn */] <1995.5f ? 
        0.026462322f : 
        -0.06916908f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieEndSwitch_Tree_28_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <1995.5f ? 
        -0.069020644f : 
        0.069725364f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class TrieEndSwitch_Forest_29 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += TrieEndSwitch_Tree_29_class_0.score0(fdata);
    preds[2] += TrieEndSwitch_Tree_29_class_1.score0(fdata);
    preds[3] += TrieEndSwitch_Tree_29_class_2.score0(fdata);
  }
}
class TrieEndSwitch_Tree_29_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <996.5f ? 
        0.06794099f : 
        -0.06883133f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieEndSwitch_Tree_29_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* nodeIdIn */] <993.5f ? 
        -0.06905049f : 
        0.027039913f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class TrieEndSwitch_Tree_29_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* nodeIdIn */] <1995.5f ? 
        -0.068824545f : 
        0.06932878f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


