
/*
  Licensed under the Apache License, Version 2.0
    http:

  AUTOGENERATED BY H2O at 2020-02-09T20:32:42.328-05:00
  3.24.0.5
  
  Standalone prediction code with sample test data for GBMModel named SearchLoopMethod

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http:
      curl http:
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m SearchLoopMethod.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="SearchLoopMethod", algorithm="gbm")
public class SearchLoopMethod extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }

  public boolean isSupervised() { return true; }
  public int nfeatures() { return 1; }
  public int nclasses() { return 9; }

  
  public static final String[] NAMES = NamesHolder_SearchLoopMethod.VALUES;
  
  public static final int NCLASSES = 9;

  
  public static final String[][] DOMAINS = new String[][] {
    /* currentStateIn */ SearchLoopMethod_ColInfo_0.VALUES,
    /* methodOut */ SearchLoopMethod_ColInfo_1.VALUES
  };
  
  public static final double[] PRIOR_CLASS_DISTRIB = {0.1,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1};
  
  public static final double[] MODEL_CLASS_DISTRIB = {0.1,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1};

  public SearchLoopMethod() { super(NAMES,DOMAINS,"methodOut"); }
  public String getUUID() { return Long.toString(7197831496044709152L); }

  
  
  
  
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    SearchLoopMethod_Forest_0.score0(data,preds);
    SearchLoopMethod_Forest_1.score0(data,preds);
    SearchLoopMethod_Forest_2.score0(data,preds);
    SearchLoopMethod_Forest_3.score0(data,preds);
    SearchLoopMethod_Forest_4.score0(data,preds);
    SearchLoopMethod_Forest_5.score0(data,preds);
    SearchLoopMethod_Forest_6.score0(data,preds);
    SearchLoopMethod_Forest_7.score0(data,preds);
    SearchLoopMethod_Forest_8.score0(data,preds);
    SearchLoopMethod_Forest_9.score0(data,preds);
    SearchLoopMethod_Forest_10.score0(data,preds);
    SearchLoopMethod_Forest_11.score0(data,preds);
    SearchLoopMethod_Forest_12.score0(data,preds);
    SearchLoopMethod_Forest_13.score0(data,preds);
    SearchLoopMethod_Forest_14.score0(data,preds);
    SearchLoopMethod_Forest_15.score0(data,preds);
    SearchLoopMethod_Forest_16.score0(data,preds);
    SearchLoopMethod_Forest_17.score0(data,preds);
    SearchLoopMethod_Forest_18.score0(data,preds);
    SearchLoopMethod_Forest_19.score0(data,preds);
    SearchLoopMethod_Forest_20.score0(data,preds);
    SearchLoopMethod_Forest_21.score0(data,preds);
    SearchLoopMethod_Forest_22.score0(data,preds);
    SearchLoopMethod_Forest_23.score0(data,preds);
    SearchLoopMethod_Forest_24.score0(data,preds);
    SearchLoopMethod_Forest_25.score0(data,preds);
    SearchLoopMethod_Forest_26.score0(data,preds);
    SearchLoopMethod_Forest_27.score0(data,preds);
    SearchLoopMethod_Forest_28.score0(data,preds);
    SearchLoopMethod_Forest_29.score0(data,preds);
    hex.genmodel.GenModel.GBM_rescale(preds);
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}

class NamesHolder_SearchLoopMethod implements java.io.Serializable {
  public static final String[] VALUES = new String[1];
  static {
    NamesHolder_SearchLoopMethod_0.fill(VALUES);
  }
  static final class NamesHolder_SearchLoopMethod_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "currentStateIn";
    }
  }
}

class SearchLoopMethod_ColInfo_0 implements java.io.Serializable {
  public static final String[] VALUES = new String[10];
  static {
    SearchLoopMethod_ColInfo_0_0.fill(VALUES);
  }
  static final class SearchLoopMethod_ColInfo_0_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "-1";
      sa[1] = "0";
      sa[2] = "1";
      sa[3] = "2";
      sa[4] = "3";
      sa[5] = "4";
      sa[6] = "5";
      sa[7] = "6";
      sa[8] = "7";
      sa[9] = "8";
    }
  }
}

class SearchLoopMethod_ColInfo_1 implements java.io.Serializable {
  public static final String[] VALUES = new String[9];
  static {
    SearchLoopMethod_ColInfo_1_0.fill(VALUES);
  }
  static final class SearchLoopMethod_ColInfo_1_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "end";
      sa[1] = "getCheckFalse";
      sa[2] = "getExchaustiveCheck";
      sa[3] = "getFalse";
      sa[4] = "getLetterIndex";
      sa[5] = "getNextLetter";
      sa[6] = "getNextNodeId";
      sa[7] = "getTrue";
      sa[8] = "init";
    }
  }
}

class SearchLoopMethod_Forest_0 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += SearchLoopMethod_Tree_0_class_0.score0(fdata);
    preds[2] += SearchLoopMethod_Tree_0_class_1.score0(fdata);
    preds[3] += SearchLoopMethod_Tree_0_class_2.score0(fdata);
    preds[4] += SearchLoopMethod_Tree_0_class_3.score0(fdata);
    preds[5] += SearchLoopMethod_Tree_0_class_4.score0(fdata);
    preds[6] += SearchLoopMethod_Tree_0_class_5.score0(fdata);
    preds[7] += SearchLoopMethod_Tree_0_class_6.score0(fdata);
    preds[8] += SearchLoopMethod_Tree_0_class_7.score0(fdata);
    preds[9] += SearchLoopMethod_Tree_0_class_8.score0(fdata);
  }
}
class SearchLoopMethod_Tree_0_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.1f : 
        0.8000001f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
}

class SearchLoopMethod_Tree_0_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.1f : 
        0.8000001f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {-120, 0, 0, 0};
}

class SearchLoopMethod_Tree_0_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.1f : 
        0.8000001f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {0, 1, 0, 0};
}

class SearchLoopMethod_Tree_0_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.1f : 
        0.8000001f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {16, 0, 0, 0};
}

class SearchLoopMethod_Tree_0_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.1f : 
        0.8000001f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {32, 0, 0, 0};
}

class SearchLoopMethod_Tree_0_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.1f : 
        0.8000001f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
}

class SearchLoopMethod_Tree_0_class_6 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.1f : 
        0.8000001f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {64, 0, 0, 0};
}

class SearchLoopMethod_Tree_0_class_7 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.1f : 
        0.8000001f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {0, 2, 0, 0};
}

class SearchLoopMethod_Tree_0_class_8 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.1f : 
        0.8000001f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
}


class SearchLoopMethod_Forest_1 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += SearchLoopMethod_Tree_1_class_0.score0(fdata);
    preds[2] += SearchLoopMethod_Tree_1_class_1.score0(fdata);
    preds[3] += SearchLoopMethod_Tree_1_class_2.score0(fdata);
    preds[4] += SearchLoopMethod_Tree_1_class_3.score0(fdata);
    preds[5] += SearchLoopMethod_Tree_1_class_4.score0(fdata);
    preds[6] += SearchLoopMethod_Tree_1_class_5.score0(fdata);
    preds[7] += SearchLoopMethod_Tree_1_class_6.score0(fdata);
    preds[8] += SearchLoopMethod_Tree_1_class_7.score0(fdata);
    preds[9] += SearchLoopMethod_Tree_1_class_8.score0(fdata);
  }
}
class SearchLoopMethod_Tree_1_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09828557f : 
        0.37800512f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
}

class SearchLoopMethod_Tree_1_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09828557f : 
        0.37800512f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {-120, 0, 0, 0};
}

class SearchLoopMethod_Tree_1_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09828557f : 
        0.37800512f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {0, 1, 0, 0};
}

class SearchLoopMethod_Tree_1_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09828557f : 
        0.37800512f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {16, 0, 0, 0};
}

class SearchLoopMethod_Tree_1_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09828557f : 
        0.37800512f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {32, 0, 0, 0};
}

class SearchLoopMethod_Tree_1_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09828557f : 
        0.37800512f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
}

class SearchLoopMethod_Tree_1_class_6 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09828557f : 
        0.37800512f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {64, 0, 0, 0};
}

class SearchLoopMethod_Tree_1_class_7 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09828557f : 
        0.37800512f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {0, 2, 0, 0};
}

class SearchLoopMethod_Tree_1_class_8 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09828557f : 
        0.37800512f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
}


class SearchLoopMethod_Forest_2 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += SearchLoopMethod_Tree_2_class_0.score0(fdata);
    preds[2] += SearchLoopMethod_Tree_2_class_1.score0(fdata);
    preds[3] += SearchLoopMethod_Tree_2_class_2.score0(fdata);
    preds[4] += SearchLoopMethod_Tree_2_class_3.score0(fdata);
    preds[5] += SearchLoopMethod_Tree_2_class_4.score0(fdata);
    preds[6] += SearchLoopMethod_Tree_2_class_5.score0(fdata);
    preds[7] += SearchLoopMethod_Tree_2_class_6.score0(fdata);
    preds[8] += SearchLoopMethod_Tree_2_class_7.score0(fdata);
    preds[9] += SearchLoopMethod_Tree_2_class_8.score0(fdata);
  }
}
class SearchLoopMethod_Tree_2_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09699905f : 
        0.268454f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
}

class SearchLoopMethod_Tree_2_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09699905f : 
        0.268454f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {-120, 0, 0, 0};
}

class SearchLoopMethod_Tree_2_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09699905f : 
        0.268454f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {0, 1, 0, 0};
}

class SearchLoopMethod_Tree_2_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09699905f : 
        0.268454f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {16, 0, 0, 0};
}

class SearchLoopMethod_Tree_2_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09699905f : 
        0.268454f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {32, 0, 0, 0};
}

class SearchLoopMethod_Tree_2_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09699905f : 
        0.268454f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
}

class SearchLoopMethod_Tree_2_class_6 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09699905f : 
        0.268454f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {64, 0, 0, 0};
}

class SearchLoopMethod_Tree_2_class_7 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09699905f : 
        0.268454f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {0, 2, 0, 0};
}

class SearchLoopMethod_Tree_2_class_8 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09699905f : 
        0.268454f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
}


class SearchLoopMethod_Forest_3 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += SearchLoopMethod_Tree_3_class_0.score0(fdata);
    preds[2] += SearchLoopMethod_Tree_3_class_1.score0(fdata);
    preds[3] += SearchLoopMethod_Tree_3_class_2.score0(fdata);
    preds[4] += SearchLoopMethod_Tree_3_class_3.score0(fdata);
    preds[5] += SearchLoopMethod_Tree_3_class_4.score0(fdata);
    preds[6] += SearchLoopMethod_Tree_3_class_5.score0(fdata);
    preds[7] += SearchLoopMethod_Tree_3_class_6.score0(fdata);
    preds[8] += SearchLoopMethod_Tree_3_class_7.score0(fdata);
    preds[9] += SearchLoopMethod_Tree_3_class_8.score0(fdata);
  }
}
class SearchLoopMethod_Tree_3_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.095884f : 
        0.21348593f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
}

class SearchLoopMethod_Tree_3_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.095884f : 
        0.21348593f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {-120, 0, 0, 0};
}

class SearchLoopMethod_Tree_3_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.095884f : 
        0.21348593f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {0, 1, 0, 0};
}

class SearchLoopMethod_Tree_3_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.095884f : 
        0.21348593f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {16, 0, 0, 0};
}

class SearchLoopMethod_Tree_3_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.095884f : 
        0.21348593f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {32, 0, 0, 0};
}

class SearchLoopMethod_Tree_3_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.095884f : 
        0.21348593f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
}

class SearchLoopMethod_Tree_3_class_6 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.095884f : 
        0.21348593f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {64, 0, 0, 0};
}

class SearchLoopMethod_Tree_3_class_7 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.095884f : 
        0.21348593f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {0, 2, 0, 0};
}

class SearchLoopMethod_Tree_3_class_8 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.095884f : 
        0.21348593f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
}


class SearchLoopMethod_Forest_4 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += SearchLoopMethod_Tree_4_class_0.score0(fdata);
    preds[2] += SearchLoopMethod_Tree_4_class_1.score0(fdata);
    preds[3] += SearchLoopMethod_Tree_4_class_2.score0(fdata);
    preds[4] += SearchLoopMethod_Tree_4_class_3.score0(fdata);
    preds[5] += SearchLoopMethod_Tree_4_class_4.score0(fdata);
    preds[6] += SearchLoopMethod_Tree_4_class_5.score0(fdata);
    preds[7] += SearchLoopMethod_Tree_4_class_6.score0(fdata);
    preds[8] += SearchLoopMethod_Tree_4_class_7.score0(fdata);
    preds[9] += SearchLoopMethod_Tree_4_class_8.score0(fdata);
  }
}
class SearchLoopMethod_Tree_4_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09490442f : 
        0.18033183f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
}

class SearchLoopMethod_Tree_4_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09490442f : 
        0.18033183f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {-120, 0, 0, 0};
}

class SearchLoopMethod_Tree_4_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09490442f : 
        0.18033183f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {0, 1, 0, 0};
}

class SearchLoopMethod_Tree_4_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09490442f : 
        0.18033183f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {16, 0, 0, 0};
}

class SearchLoopMethod_Tree_4_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09490442f : 
        0.18033183f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {32, 0, 0, 0};
}

class SearchLoopMethod_Tree_4_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09490442f : 
        0.18033183f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
}

class SearchLoopMethod_Tree_4_class_6 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09490442f : 
        0.18033183f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {64, 0, 0, 0};
}

class SearchLoopMethod_Tree_4_class_7 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09490442f : 
        0.18033183f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {0, 2, 0, 0};
}

class SearchLoopMethod_Tree_4_class_8 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09490442f : 
        0.18033183f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
}


class SearchLoopMethod_Forest_5 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += SearchLoopMethod_Tree_5_class_0.score0(fdata);
    preds[2] += SearchLoopMethod_Tree_5_class_1.score0(fdata);
    preds[3] += SearchLoopMethod_Tree_5_class_2.score0(fdata);
    preds[4] += SearchLoopMethod_Tree_5_class_3.score0(fdata);
    preds[5] += SearchLoopMethod_Tree_5_class_4.score0(fdata);
    preds[6] += SearchLoopMethod_Tree_5_class_5.score0(fdata);
    preds[7] += SearchLoopMethod_Tree_5_class_6.score0(fdata);
    preds[8] += SearchLoopMethod_Tree_5_class_7.score0(fdata);
    preds[9] += SearchLoopMethod_Tree_5_class_8.score0(fdata);
  }
}
class SearchLoopMethod_Tree_5_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09404471f : 
        0.15832996f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
}

class SearchLoopMethod_Tree_5_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09404471f : 
        0.15832996f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {-120, 0, 0, 0};
}

class SearchLoopMethod_Tree_5_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09404471f : 
        0.15832996f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {0, 1, 0, 0};
}

class SearchLoopMethod_Tree_5_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09404471f : 
        0.15832996f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {16, 0, 0, 0};
}

class SearchLoopMethod_Tree_5_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09404471f : 
        0.15832996f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {32, 0, 0, 0};
}

class SearchLoopMethod_Tree_5_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09404471f : 
        0.15832996f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
}

class SearchLoopMethod_Tree_5_class_6 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09404471f : 
        0.15832996f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {64, 0, 0, 0};
}

class SearchLoopMethod_Tree_5_class_7 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09404471f : 
        0.15832996f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {0, 2, 0, 0};
}

class SearchLoopMethod_Tree_5_class_8 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09404471f : 
        0.15832996f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
}


class SearchLoopMethod_Forest_6 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += SearchLoopMethod_Tree_6_class_0.score0(fdata);
    preds[2] += SearchLoopMethod_Tree_6_class_1.score0(fdata);
    preds[3] += SearchLoopMethod_Tree_6_class_2.score0(fdata);
    preds[4] += SearchLoopMethod_Tree_6_class_3.score0(fdata);
    preds[5] += SearchLoopMethod_Tree_6_class_4.score0(fdata);
    preds[6] += SearchLoopMethod_Tree_6_class_5.score0(fdata);
    preds[7] += SearchLoopMethod_Tree_6_class_6.score0(fdata);
    preds[8] += SearchLoopMethod_Tree_6_class_7.score0(fdata);
    preds[9] += SearchLoopMethod_Tree_6_class_8.score0(fdata);
  }
}
class SearchLoopMethod_Tree_6_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09329362f : 
        0.14284138f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
}

class SearchLoopMethod_Tree_6_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09329362f : 
        0.14284138f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {-120, 0, 0, 0};
}

class SearchLoopMethod_Tree_6_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09329362f : 
        0.14284138f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {0, 1, 0, 0};
}

class SearchLoopMethod_Tree_6_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09329362f : 
        0.14284138f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {16, 0, 0, 0};
}

class SearchLoopMethod_Tree_6_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09329362f : 
        0.14284138f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {32, 0, 0, 0};
}

class SearchLoopMethod_Tree_6_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09329362f : 
        0.14284138f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
}

class SearchLoopMethod_Tree_6_class_6 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09329362f : 
        0.14284138f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {64, 0, 0, 0};
}

class SearchLoopMethod_Tree_6_class_7 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09329362f : 
        0.14284138f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {0, 2, 0, 0};
}

class SearchLoopMethod_Tree_6_class_8 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09329362f : 
        0.14284138f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
}


class SearchLoopMethod_Forest_7 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += SearchLoopMethod_Tree_7_class_0.score0(fdata);
    preds[2] += SearchLoopMethod_Tree_7_class_1.score0(fdata);
    preds[3] += SearchLoopMethod_Tree_7_class_2.score0(fdata);
    preds[4] += SearchLoopMethod_Tree_7_class_3.score0(fdata);
    preds[5] += SearchLoopMethod_Tree_7_class_4.score0(fdata);
    preds[6] += SearchLoopMethod_Tree_7_class_5.score0(fdata);
    preds[7] += SearchLoopMethod_Tree_7_class_6.score0(fdata);
    preds[8] += SearchLoopMethod_Tree_7_class_7.score0(fdata);
    preds[9] += SearchLoopMethod_Tree_7_class_8.score0(fdata);
  }
}
class SearchLoopMethod_Tree_7_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09264093f : 
        0.13149378f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
}

class SearchLoopMethod_Tree_7_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09264093f : 
        0.13149378f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {-120, 0, 0, 0};
}

class SearchLoopMethod_Tree_7_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09264093f : 
        0.13149378f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {0, 1, 0, 0};
}

class SearchLoopMethod_Tree_7_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09264093f : 
        0.13149378f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {16, 0, 0, 0};
}

class SearchLoopMethod_Tree_7_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09264093f : 
        0.13149378f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {32, 0, 0, 0};
}

class SearchLoopMethod_Tree_7_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09264093f : 
        0.13149378f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
}

class SearchLoopMethod_Tree_7_class_6 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09264093f : 
        0.13149378f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {64, 0, 0, 0};
}

class SearchLoopMethod_Tree_7_class_7 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09264093f : 
        0.13149378f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {0, 2, 0, 0};
}

class SearchLoopMethod_Tree_7_class_8 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09264093f : 
        0.13149378f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
}


class SearchLoopMethod_Forest_8 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += SearchLoopMethod_Tree_8_class_0.score0(fdata);
    preds[2] += SearchLoopMethod_Tree_8_class_1.score0(fdata);
    preds[3] += SearchLoopMethod_Tree_8_class_2.score0(fdata);
    preds[4] += SearchLoopMethod_Tree_8_class_3.score0(fdata);
    preds[5] += SearchLoopMethod_Tree_8_class_4.score0(fdata);
    preds[6] += SearchLoopMethod_Tree_8_class_5.score0(fdata);
    preds[7] += SearchLoopMethod_Tree_8_class_6.score0(fdata);
    preds[8] += SearchLoopMethod_Tree_8_class_7.score0(fdata);
    preds[9] += SearchLoopMethod_Tree_8_class_8.score0(fdata);
  }
}
class SearchLoopMethod_Tree_8_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.092076674f : 
        0.12293904f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
}

class SearchLoopMethod_Tree_8_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.092076674f : 
        0.12293904f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {-120, 0, 0, 0};
}

class SearchLoopMethod_Tree_8_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.092076674f : 
        0.12293904f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {0, 1, 0, 0};
}

class SearchLoopMethod_Tree_8_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.092076674f : 
        0.12293904f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {16, 0, 0, 0};
}

class SearchLoopMethod_Tree_8_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.092076674f : 
        0.12293904f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {32, 0, 0, 0};
}

class SearchLoopMethod_Tree_8_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.092076674f : 
        0.12293904f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
}

class SearchLoopMethod_Tree_8_class_6 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.092076674f : 
        0.12293904f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {64, 0, 0, 0};
}

class SearchLoopMethod_Tree_8_class_7 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.092076674f : 
        0.12293904f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {0, 2, 0, 0};
}

class SearchLoopMethod_Tree_8_class_8 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.092076674f : 
        0.12293904f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
}


class SearchLoopMethod_Forest_9 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += SearchLoopMethod_Tree_9_class_0.score0(fdata);
    preds[2] += SearchLoopMethod_Tree_9_class_1.score0(fdata);
    preds[3] += SearchLoopMethod_Tree_9_class_2.score0(fdata);
    preds[4] += SearchLoopMethod_Tree_9_class_3.score0(fdata);
    preds[5] += SearchLoopMethod_Tree_9_class_4.score0(fdata);
    preds[6] += SearchLoopMethod_Tree_9_class_5.score0(fdata);
    preds[7] += SearchLoopMethod_Tree_9_class_6.score0(fdata);
    preds[8] += SearchLoopMethod_Tree_9_class_7.score0(fdata);
    preds[9] += SearchLoopMethod_Tree_9_class_8.score0(fdata);
  }
}
class SearchLoopMethod_Tree_9_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09159117f : 
        0.11635131f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
}

class SearchLoopMethod_Tree_9_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09159117f : 
        0.11635131f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {-120, 0, 0, 0};
}

class SearchLoopMethod_Tree_9_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09159117f : 
        0.11635131f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {0, 1, 0, 0};
}

class SearchLoopMethod_Tree_9_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09159117f : 
        0.11635131f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {16, 0, 0, 0};
}

class SearchLoopMethod_Tree_9_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09159117f : 
        0.11635131f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {32, 0, 0, 0};
}

class SearchLoopMethod_Tree_9_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09159117f : 
        0.11635131f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
}

class SearchLoopMethod_Tree_9_class_6 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09159117f : 
        0.11635131f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {64, 0, 0, 0};
}

class SearchLoopMethod_Tree_9_class_7 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09159117f : 
        0.11635131f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {0, 2, 0, 0};
}

class SearchLoopMethod_Tree_9_class_8 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09159117f : 
        0.11635131f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
}


class SearchLoopMethod_Forest_10 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += SearchLoopMethod_Tree_10_class_0.score0(fdata);
    preds[2] += SearchLoopMethod_Tree_10_class_1.score0(fdata);
    preds[3] += SearchLoopMethod_Tree_10_class_2.score0(fdata);
    preds[4] += SearchLoopMethod_Tree_10_class_3.score0(fdata);
    preds[5] += SearchLoopMethod_Tree_10_class_4.score0(fdata);
    preds[6] += SearchLoopMethod_Tree_10_class_5.score0(fdata);
    preds[7] += SearchLoopMethod_Tree_10_class_6.score0(fdata);
    preds[8] += SearchLoopMethod_Tree_10_class_7.score0(fdata);
    preds[9] += SearchLoopMethod_Tree_10_class_8.score0(fdata);
  }
}
class SearchLoopMethod_Tree_10_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.091175176f : 
        0.11119534f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
}

class SearchLoopMethod_Tree_10_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.091175176f : 
        0.11119534f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {-120, 0, 0, 0};
}

class SearchLoopMethod_Tree_10_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.091175176f : 
        0.11119534f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {0, 1, 0, 0};
}

class SearchLoopMethod_Tree_10_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.091175176f : 
        0.11119534f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {16, 0, 0, 0};
}

class SearchLoopMethod_Tree_10_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.091175176f : 
        0.11119534f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {32, 0, 0, 0};
}

class SearchLoopMethod_Tree_10_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.091175176f : 
        0.11119534f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
}

class SearchLoopMethod_Tree_10_class_6 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.091175176f : 
        0.11119534f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {64, 0, 0, 0};
}

class SearchLoopMethod_Tree_10_class_7 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.091175176f : 
        0.11119534f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {0, 2, 0, 0};
}

class SearchLoopMethod_Tree_10_class_8 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.091175176f : 
        0.11119534f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
}


class SearchLoopMethod_Forest_11 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += SearchLoopMethod_Tree_11_class_0.score0(fdata);
    preds[2] += SearchLoopMethod_Tree_11_class_1.score0(fdata);
    preds[3] += SearchLoopMethod_Tree_11_class_2.score0(fdata);
    preds[4] += SearchLoopMethod_Tree_11_class_3.score0(fdata);
    preds[5] += SearchLoopMethod_Tree_11_class_4.score0(fdata);
    preds[6] += SearchLoopMethod_Tree_11_class_5.score0(fdata);
    preds[7] += SearchLoopMethod_Tree_11_class_6.score0(fdata);
    preds[8] += SearchLoopMethod_Tree_11_class_7.score0(fdata);
    preds[9] += SearchLoopMethod_Tree_11_class_8.score0(fdata);
  }
}
class SearchLoopMethod_Tree_11_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09082001f : 
        0.10710862f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
}

class SearchLoopMethod_Tree_11_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09082001f : 
        0.10710862f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {-120, 0, 0, 0};
}

class SearchLoopMethod_Tree_11_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09082001f : 
        0.10710862f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {0, 1, 0, 0};
}

class SearchLoopMethod_Tree_11_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09082001f : 
        0.10710862f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {16, 0, 0, 0};
}

class SearchLoopMethod_Tree_11_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09082001f : 
        0.10710862f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {32, 0, 0, 0};
}

class SearchLoopMethod_Tree_11_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09082001f : 
        0.10710862f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
}

class SearchLoopMethod_Tree_11_class_6 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09082001f : 
        0.10710862f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {64, 0, 0, 0};
}

class SearchLoopMethod_Tree_11_class_7 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09082001f : 
        0.10710862f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {0, 2, 0, 0};
}

class SearchLoopMethod_Tree_11_class_8 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.09082001f : 
        0.10710862f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
}


class SearchLoopMethod_Forest_12 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += SearchLoopMethod_Tree_12_class_0.score0(fdata);
    preds[2] += SearchLoopMethod_Tree_12_class_1.score0(fdata);
    preds[3] += SearchLoopMethod_Tree_12_class_2.score0(fdata);
    preds[4] += SearchLoopMethod_Tree_12_class_3.score0(fdata);
    preds[5] += SearchLoopMethod_Tree_12_class_4.score0(fdata);
    preds[6] += SearchLoopMethod_Tree_12_class_5.score0(fdata);
    preds[7] += SearchLoopMethod_Tree_12_class_6.score0(fdata);
    preds[8] += SearchLoopMethod_Tree_12_class_7.score0(fdata);
    preds[9] += SearchLoopMethod_Tree_12_class_8.score0(fdata);
  }
}
class SearchLoopMethod_Tree_12_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.090517715f : 
        0.10383688f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
}

class SearchLoopMethod_Tree_12_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.090517715f : 
        0.10383688f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {-120, 0, 0, 0};
}

class SearchLoopMethod_Tree_12_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.090517715f : 
        0.10383688f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {0, 1, 0, 0};
}

class SearchLoopMethod_Tree_12_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.090517715f : 
        0.10383688f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {16, 0, 0, 0};
}

class SearchLoopMethod_Tree_12_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.090517715f : 
        0.10383688f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {32, 0, 0, 0};
}

class SearchLoopMethod_Tree_12_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.090517715f : 
        0.10383688f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
}

class SearchLoopMethod_Tree_12_class_6 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.090517715f : 
        0.10383688f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {64, 0, 0, 0};
}

class SearchLoopMethod_Tree_12_class_7 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.090517715f : 
        0.10383688f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {0, 2, 0, 0};
}

class SearchLoopMethod_Tree_12_class_8 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.090517715f : 
        0.10383688f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
}


class SearchLoopMethod_Forest_13 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += SearchLoopMethod_Tree_13_class_0.score0(fdata);
    preds[2] += SearchLoopMethod_Tree_13_class_1.score0(fdata);
    preds[3] += SearchLoopMethod_Tree_13_class_2.score0(fdata);
    preds[4] += SearchLoopMethod_Tree_13_class_3.score0(fdata);
    preds[5] += SearchLoopMethod_Tree_13_class_4.score0(fdata);
    preds[6] += SearchLoopMethod_Tree_13_class_5.score0(fdata);
    preds[7] += SearchLoopMethod_Tree_13_class_6.score0(fdata);
    preds[8] += SearchLoopMethod_Tree_13_class_7.score0(fdata);
    preds[9] += SearchLoopMethod_Tree_13_class_8.score0(fdata);
  }
}
class SearchLoopMethod_Tree_13_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.0902611f : 
        0.10119656f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
}

class SearchLoopMethod_Tree_13_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.0902611f : 
        0.10119656f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {-120, 0, 0, 0};
}

class SearchLoopMethod_Tree_13_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.0902611f : 
        0.10119656f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {0, 1, 0, 0};
}

class SearchLoopMethod_Tree_13_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.0902611f : 
        0.10119656f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {16, 0, 0, 0};
}

class SearchLoopMethod_Tree_13_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.0902611f : 
        0.10119656f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {32, 0, 0, 0};
}

class SearchLoopMethod_Tree_13_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.0902611f : 
        0.10119656f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
}

class SearchLoopMethod_Tree_13_class_6 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.0902611f : 
        0.10119656f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {64, 0, 0, 0};
}

class SearchLoopMethod_Tree_13_class_7 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.0902611f : 
        0.10119656f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {0, 2, 0, 0};
}

class SearchLoopMethod_Tree_13_class_8 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.0902611f : 
        0.10119656f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
}


class SearchLoopMethod_Forest_14 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += SearchLoopMethod_Tree_14_class_0.score0(fdata);
    preds[2] += SearchLoopMethod_Tree_14_class_1.score0(fdata);
    preds[3] += SearchLoopMethod_Tree_14_class_2.score0(fdata);
    preds[4] += SearchLoopMethod_Tree_14_class_3.score0(fdata);
    preds[5] += SearchLoopMethod_Tree_14_class_4.score0(fdata);
    preds[6] += SearchLoopMethod_Tree_14_class_5.score0(fdata);
    preds[7] += SearchLoopMethod_Tree_14_class_6.score0(fdata);
    preds[8] += SearchLoopMethod_Tree_14_class_7.score0(fdata);
    preds[9] += SearchLoopMethod_Tree_14_class_8.score0(fdata);
  }
}
class SearchLoopMethod_Tree_14_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.090043746f : 
        0.099052f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
}

class SearchLoopMethod_Tree_14_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.090043746f : 
        0.099052f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {-120, 0, 0, 0};
}

class SearchLoopMethod_Tree_14_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.090043746f : 
        0.099052f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {0, 1, 0, 0};
}

class SearchLoopMethod_Tree_14_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.090043746f : 
        0.099052f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {16, 0, 0, 0};
}

class SearchLoopMethod_Tree_14_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.090043746f : 
        0.099052f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {32, 0, 0, 0};
}

class SearchLoopMethod_Tree_14_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.090043746f : 
        0.099052f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
}

class SearchLoopMethod_Tree_14_class_6 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.090043746f : 
        0.099052f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {64, 0, 0, 0};
}

class SearchLoopMethod_Tree_14_class_7 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.090043746f : 
        0.099052f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {0, 2, 0, 0};
}

class SearchLoopMethod_Tree_14_class_8 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.090043746f : 
        0.099052f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
}


class SearchLoopMethod_Forest_15 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += SearchLoopMethod_Tree_15_class_0.score0(fdata);
    preds[2] += SearchLoopMethod_Tree_15_class_1.score0(fdata);
    preds[3] += SearchLoopMethod_Tree_15_class_2.score0(fdata);
    preds[4] += SearchLoopMethod_Tree_15_class_3.score0(fdata);
    preds[5] += SearchLoopMethod_Tree_15_class_4.score0(fdata);
    preds[6] += SearchLoopMethod_Tree_15_class_5.score0(fdata);
    preds[7] += SearchLoopMethod_Tree_15_class_6.score0(fdata);
    preds[8] += SearchLoopMethod_Tree_15_class_7.score0(fdata);
    preds[9] += SearchLoopMethod_Tree_15_class_8.score0(fdata);
  }
}
class SearchLoopMethod_Tree_15_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.089859985f : 
        0.09730098f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
}

class SearchLoopMethod_Tree_15_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.089859985f : 
        0.09730098f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {-120, 0, 0, 0};
}

class SearchLoopMethod_Tree_15_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.089859985f : 
        0.09730098f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {0, 1, 0, 0};
}

class SearchLoopMethod_Tree_15_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.089859985f : 
        0.09730098f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {16, 0, 0, 0};
}

class SearchLoopMethod_Tree_15_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.089859985f : 
        0.09730098f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {32, 0, 0, 0};
}

class SearchLoopMethod_Tree_15_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.089859985f : 
        0.09730098f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
}

class SearchLoopMethod_Tree_15_class_6 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.089859985f : 
        0.09730098f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {64, 0, 0, 0};
}

class SearchLoopMethod_Tree_15_class_7 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.089859985f : 
        0.09730098f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {0, 2, 0, 0};
}

class SearchLoopMethod_Tree_15_class_8 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.089859985f : 
        0.09730098f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
}


class SearchLoopMethod_Forest_16 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += SearchLoopMethod_Tree_16_class_0.score0(fdata);
    preds[2] += SearchLoopMethod_Tree_16_class_1.score0(fdata);
    preds[3] += SearchLoopMethod_Tree_16_class_2.score0(fdata);
    preds[4] += SearchLoopMethod_Tree_16_class_3.score0(fdata);
    preds[5] += SearchLoopMethod_Tree_16_class_4.score0(fdata);
    preds[6] += SearchLoopMethod_Tree_16_class_5.score0(fdata);
    preds[7] += SearchLoopMethod_Tree_16_class_6.score0(fdata);
    preds[8] += SearchLoopMethod_Tree_16_class_7.score0(fdata);
    preds[9] += SearchLoopMethod_Tree_16_class_8.score0(fdata);
  }
}
class SearchLoopMethod_Tree_16_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08970488f : 
        0.095865116f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
}

class SearchLoopMethod_Tree_16_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08970488f : 
        0.095865116f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {-120, 0, 0, 0};
}

class SearchLoopMethod_Tree_16_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08970488f : 
        0.095865116f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {0, 1, 0, 0};
}

class SearchLoopMethod_Tree_16_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08970488f : 
        0.095865116f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {16, 0, 0, 0};
}

class SearchLoopMethod_Tree_16_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08970488f : 
        0.095865116f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {32, 0, 0, 0};
}

class SearchLoopMethod_Tree_16_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08970488f : 
        0.095865116f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
}

class SearchLoopMethod_Tree_16_class_6 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08970488f : 
        0.095865116f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {64, 0, 0, 0};
}

class SearchLoopMethod_Tree_16_class_7 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08970488f : 
        0.095865116f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {0, 2, 0, 0};
}

class SearchLoopMethod_Tree_16_class_8 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08970488f : 
        0.095865116f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
}


class SearchLoopMethod_Forest_17 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += SearchLoopMethod_Tree_17_class_0.score0(fdata);
    preds[2] += SearchLoopMethod_Tree_17_class_1.score0(fdata);
    preds[3] += SearchLoopMethod_Tree_17_class_2.score0(fdata);
    preds[4] += SearchLoopMethod_Tree_17_class_3.score0(fdata);
    preds[5] += SearchLoopMethod_Tree_17_class_4.score0(fdata);
    preds[6] += SearchLoopMethod_Tree_17_class_5.score0(fdata);
    preds[7] += SearchLoopMethod_Tree_17_class_6.score0(fdata);
    preds[8] += SearchLoopMethod_Tree_17_class_7.score0(fdata);
    preds[9] += SearchLoopMethod_Tree_17_class_8.score0(fdata);
  }
}
class SearchLoopMethod_Tree_17_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.089574136f : 
        0.09468356f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
}

class SearchLoopMethod_Tree_17_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.089574136f : 
        0.09468356f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {-120, 0, 0, 0};
}

class SearchLoopMethod_Tree_17_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.089574136f : 
        0.09468356f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {0, 1, 0, 0};
}

class SearchLoopMethod_Tree_17_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.089574136f : 
        0.09468356f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {16, 0, 0, 0};
}

class SearchLoopMethod_Tree_17_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.089574136f : 
        0.09468356f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {32, 0, 0, 0};
}

class SearchLoopMethod_Tree_17_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.089574136f : 
        0.09468356f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
}

class SearchLoopMethod_Tree_17_class_6 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.089574136f : 
        0.09468356f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {64, 0, 0, 0};
}

class SearchLoopMethod_Tree_17_class_7 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.089574136f : 
        0.09468356f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {0, 2, 0, 0};
}

class SearchLoopMethod_Tree_17_class_8 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.089574136f : 
        0.09468356f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
}


class SearchLoopMethod_Forest_18 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += SearchLoopMethod_Tree_18_class_0.score0(fdata);
    preds[2] += SearchLoopMethod_Tree_18_class_1.score0(fdata);
    preds[3] += SearchLoopMethod_Tree_18_class_2.score0(fdata);
    preds[4] += SearchLoopMethod_Tree_18_class_3.score0(fdata);
    preds[5] += SearchLoopMethod_Tree_18_class_4.score0(fdata);
    preds[6] += SearchLoopMethod_Tree_18_class_5.score0(fdata);
    preds[7] += SearchLoopMethod_Tree_18_class_6.score0(fdata);
    preds[8] += SearchLoopMethod_Tree_18_class_7.score0(fdata);
    preds[9] += SearchLoopMethod_Tree_18_class_8.score0(fdata);
  }
}
class SearchLoopMethod_Tree_18_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.089464046f : 
        0.09370843f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
}

class SearchLoopMethod_Tree_18_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.089464046f : 
        0.09370843f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {-120, 0, 0, 0};
}

class SearchLoopMethod_Tree_18_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.089464046f : 
        0.09370843f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {0, 1, 0, 0};
}

class SearchLoopMethod_Tree_18_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.089464046f : 
        0.09370843f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {16, 0, 0, 0};
}

class SearchLoopMethod_Tree_18_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.089464046f : 
        0.09370843f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {32, 0, 0, 0};
}

class SearchLoopMethod_Tree_18_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.089464046f : 
        0.09370843f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
}

class SearchLoopMethod_Tree_18_class_6 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.089464046f : 
        0.09370843f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {64, 0, 0, 0};
}

class SearchLoopMethod_Tree_18_class_7 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.089464046f : 
        0.09370843f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {0, 2, 0, 0};
}

class SearchLoopMethod_Tree_18_class_8 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.089464046f : 
        0.09370843f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
}


class SearchLoopMethod_Forest_19 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += SearchLoopMethod_Tree_19_class_0.score0(fdata);
    preds[2] += SearchLoopMethod_Tree_19_class_1.score0(fdata);
    preds[3] += SearchLoopMethod_Tree_19_class_2.score0(fdata);
    preds[4] += SearchLoopMethod_Tree_19_class_3.score0(fdata);
    preds[5] += SearchLoopMethod_Tree_19_class_4.score0(fdata);
    preds[6] += SearchLoopMethod_Tree_19_class_5.score0(fdata);
    preds[7] += SearchLoopMethod_Tree_19_class_6.score0(fdata);
    preds[8] += SearchLoopMethod_Tree_19_class_7.score0(fdata);
    preds[9] += SearchLoopMethod_Tree_19_class_8.score0(fdata);
  }
}
class SearchLoopMethod_Tree_19_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.089371435f : 
        0.09290177f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
}

class SearchLoopMethod_Tree_19_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.089371435f : 
        0.09290177f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {-120, 0, 0, 0};
}

class SearchLoopMethod_Tree_19_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.089371435f : 
        0.09290177f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {0, 1, 0, 0};
}

class SearchLoopMethod_Tree_19_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.089371435f : 
        0.09290177f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {16, 0, 0, 0};
}

class SearchLoopMethod_Tree_19_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.089371435f : 
        0.09290177f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {32, 0, 0, 0};
}

class SearchLoopMethod_Tree_19_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.089371435f : 
        0.09290177f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
}

class SearchLoopMethod_Tree_19_class_6 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.089371435f : 
        0.09290177f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {64, 0, 0, 0};
}

class SearchLoopMethod_Tree_19_class_7 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.089371435f : 
        0.09290177f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {0, 2, 0, 0};
}

class SearchLoopMethod_Tree_19_class_8 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.089371435f : 
        0.09290177f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
}


class SearchLoopMethod_Forest_20 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += SearchLoopMethod_Tree_20_class_0.score0(fdata);
    preds[2] += SearchLoopMethod_Tree_20_class_1.score0(fdata);
    preds[3] += SearchLoopMethod_Tree_20_class_2.score0(fdata);
    preds[4] += SearchLoopMethod_Tree_20_class_3.score0(fdata);
    preds[5] += SearchLoopMethod_Tree_20_class_4.score0(fdata);
    preds[6] += SearchLoopMethod_Tree_20_class_5.score0(fdata);
    preds[7] += SearchLoopMethod_Tree_20_class_6.score0(fdata);
    preds[8] += SearchLoopMethod_Tree_20_class_7.score0(fdata);
    preds[9] += SearchLoopMethod_Tree_20_class_8.score0(fdata);
  }
}
class SearchLoopMethod_Tree_20_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08929359f : 
        0.092233114f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
}

class SearchLoopMethod_Tree_20_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08929359f : 
        0.092233114f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {-120, 0, 0, 0};
}

class SearchLoopMethod_Tree_20_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08929359f : 
        0.092233114f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {0, 1, 0, 0};
}

class SearchLoopMethod_Tree_20_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08929359f : 
        0.092233114f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {16, 0, 0, 0};
}

class SearchLoopMethod_Tree_20_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08929359f : 
        0.092233114f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {32, 0, 0, 0};
}

class SearchLoopMethod_Tree_20_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08929359f : 
        0.092233114f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
}

class SearchLoopMethod_Tree_20_class_6 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08929359f : 
        0.092233114f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {64, 0, 0, 0};
}

class SearchLoopMethod_Tree_20_class_7 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08929359f : 
        0.092233114f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {0, 2, 0, 0};
}

class SearchLoopMethod_Tree_20_class_8 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08929359f : 
        0.092233114f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
}


class SearchLoopMethod_Forest_21 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += SearchLoopMethod_Tree_21_class_0.score0(fdata);
    preds[2] += SearchLoopMethod_Tree_21_class_1.score0(fdata);
    preds[3] += SearchLoopMethod_Tree_21_class_2.score0(fdata);
    preds[4] += SearchLoopMethod_Tree_21_class_3.score0(fdata);
    preds[5] += SearchLoopMethod_Tree_21_class_4.score0(fdata);
    preds[6] += SearchLoopMethod_Tree_21_class_5.score0(fdata);
    preds[7] += SearchLoopMethod_Tree_21_class_6.score0(fdata);
    preds[8] += SearchLoopMethod_Tree_21_class_7.score0(fdata);
    preds[9] += SearchLoopMethod_Tree_21_class_8.score0(fdata);
  }
}
class SearchLoopMethod_Tree_21_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.089228205f : 
        0.09167796f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
}

class SearchLoopMethod_Tree_21_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.089228205f : 
        0.09167796f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {-120, 0, 0, 0};
}

class SearchLoopMethod_Tree_21_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.089228205f : 
        0.09167796f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {0, 1, 0, 0};
}

class SearchLoopMethod_Tree_21_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.089228205f : 
        0.09167796f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {16, 0, 0, 0};
}

class SearchLoopMethod_Tree_21_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.089228205f : 
        0.09167796f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {32, 0, 0, 0};
}

class SearchLoopMethod_Tree_21_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.089228205f : 
        0.09167796f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
}

class SearchLoopMethod_Tree_21_class_6 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.089228205f : 
        0.09167796f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {64, 0, 0, 0};
}

class SearchLoopMethod_Tree_21_class_7 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.089228205f : 
        0.09167796f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {0, 2, 0, 0};
}

class SearchLoopMethod_Tree_21_class_8 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.089228205f : 
        0.09167796f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
}


class SearchLoopMethod_Forest_22 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += SearchLoopMethod_Tree_22_class_0.score0(fdata);
    preds[2] += SearchLoopMethod_Tree_22_class_1.score0(fdata);
    preds[3] += SearchLoopMethod_Tree_22_class_2.score0(fdata);
    preds[4] += SearchLoopMethod_Tree_22_class_3.score0(fdata);
    preds[5] += SearchLoopMethod_Tree_22_class_4.score0(fdata);
    preds[6] += SearchLoopMethod_Tree_22_class_5.score0(fdata);
    preds[7] += SearchLoopMethod_Tree_22_class_6.score0(fdata);
    preds[8] += SearchLoopMethod_Tree_22_class_7.score0(fdata);
    preds[9] += SearchLoopMethod_Tree_22_class_8.score0(fdata);
  }
}
class SearchLoopMethod_Tree_22_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08917331f : 
        0.09121641f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
}

class SearchLoopMethod_Tree_22_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08917331f : 
        0.09121641f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {-120, 0, 0, 0};
}

class SearchLoopMethod_Tree_22_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08917331f : 
        0.09121641f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {0, 1, 0, 0};
}

class SearchLoopMethod_Tree_22_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08917331f : 
        0.09121641f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {16, 0, 0, 0};
}

class SearchLoopMethod_Tree_22_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08917331f : 
        0.09121641f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {32, 0, 0, 0};
}

class SearchLoopMethod_Tree_22_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08917331f : 
        0.09121641f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
}

class SearchLoopMethod_Tree_22_class_6 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08917331f : 
        0.09121641f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {64, 0, 0, 0};
}

class SearchLoopMethod_Tree_22_class_7 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08917331f : 
        0.09121641f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {0, 2, 0, 0};
}

class SearchLoopMethod_Tree_22_class_8 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08917331f : 
        0.09121641f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
}


class SearchLoopMethod_Forest_23 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += SearchLoopMethod_Tree_23_class_0.score0(fdata);
    preds[2] += SearchLoopMethod_Tree_23_class_1.score0(fdata);
    preds[3] += SearchLoopMethod_Tree_23_class_2.score0(fdata);
    preds[4] += SearchLoopMethod_Tree_23_class_3.score0(fdata);
    preds[5] += SearchLoopMethod_Tree_23_class_4.score0(fdata);
    preds[6] += SearchLoopMethod_Tree_23_class_5.score0(fdata);
    preds[7] += SearchLoopMethod_Tree_23_class_6.score0(fdata);
    preds[8] += SearchLoopMethod_Tree_23_class_7.score0(fdata);
    preds[9] += SearchLoopMethod_Tree_23_class_8.score0(fdata);
  }
}
class SearchLoopMethod_Tree_23_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08912725f : 
        0.09083223f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
}

class SearchLoopMethod_Tree_23_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08912725f : 
        0.09083223f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {-120, 0, 0, 0};
}

class SearchLoopMethod_Tree_23_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08912725f : 
        0.09083223f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {0, 1, 0, 0};
}

class SearchLoopMethod_Tree_23_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08912725f : 
        0.09083223f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {16, 0, 0, 0};
}

class SearchLoopMethod_Tree_23_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08912725f : 
        0.09083223f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {32, 0, 0, 0};
}

class SearchLoopMethod_Tree_23_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08912725f : 
        0.09083223f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
}

class SearchLoopMethod_Tree_23_class_6 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08912725f : 
        0.09083223f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {64, 0, 0, 0};
}

class SearchLoopMethod_Tree_23_class_7 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08912725f : 
        0.09083223f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {0, 2, 0, 0};
}

class SearchLoopMethod_Tree_23_class_8 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08912725f : 
        0.09083223f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
}


class SearchLoopMethod_Forest_24 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += SearchLoopMethod_Tree_24_class_0.score0(fdata);
    preds[2] += SearchLoopMethod_Tree_24_class_1.score0(fdata);
    preds[3] += SearchLoopMethod_Tree_24_class_2.score0(fdata);
    preds[4] += SearchLoopMethod_Tree_24_class_3.score0(fdata);
    preds[5] += SearchLoopMethod_Tree_24_class_4.score0(fdata);
    preds[6] += SearchLoopMethod_Tree_24_class_5.score0(fdata);
    preds[7] += SearchLoopMethod_Tree_24_class_6.score0(fdata);
    preds[8] += SearchLoopMethod_Tree_24_class_7.score0(fdata);
    preds[9] += SearchLoopMethod_Tree_24_class_8.score0(fdata);
  }
}
class SearchLoopMethod_Tree_24_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08908861f : 
        0.09051217f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
}

class SearchLoopMethod_Tree_24_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08908861f : 
        0.09051217f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {-120, 0, 0, 0};
}

class SearchLoopMethod_Tree_24_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08908861f : 
        0.09051217f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {0, 1, 0, 0};
}

class SearchLoopMethod_Tree_24_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08908861f : 
        0.09051217f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {16, 0, 0, 0};
}

class SearchLoopMethod_Tree_24_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08908861f : 
        0.09051217f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {32, 0, 0, 0};
}

class SearchLoopMethod_Tree_24_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08908861f : 
        0.09051217f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
}

class SearchLoopMethod_Tree_24_class_6 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08908861f : 
        0.09051217f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {64, 0, 0, 0};
}

class SearchLoopMethod_Tree_24_class_7 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08908861f : 
        0.09051217f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {0, 2, 0, 0};
}

class SearchLoopMethod_Tree_24_class_8 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08908861f : 
        0.09051217f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
}


class SearchLoopMethod_Forest_25 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += SearchLoopMethod_Tree_25_class_0.score0(fdata);
    preds[2] += SearchLoopMethod_Tree_25_class_1.score0(fdata);
    preds[3] += SearchLoopMethod_Tree_25_class_2.score0(fdata);
    preds[4] += SearchLoopMethod_Tree_25_class_3.score0(fdata);
    preds[5] += SearchLoopMethod_Tree_25_class_4.score0(fdata);
    preds[6] += SearchLoopMethod_Tree_25_class_5.score0(fdata);
    preds[7] += SearchLoopMethod_Tree_25_class_6.score0(fdata);
    preds[8] += SearchLoopMethod_Tree_25_class_7.score0(fdata);
    preds[9] += SearchLoopMethod_Tree_25_class_8.score0(fdata);
  }
}
class SearchLoopMethod_Tree_25_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08905621f : 
        0.090245314f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
}

class SearchLoopMethod_Tree_25_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08905621f : 
        0.090245314f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {-120, 0, 0, 0};
}

class SearchLoopMethod_Tree_25_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08905621f : 
        0.090245314f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {0, 1, 0, 0};
}

class SearchLoopMethod_Tree_25_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08905621f : 
        0.090245314f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {16, 0, 0, 0};
}

class SearchLoopMethod_Tree_25_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08905621f : 
        0.090245314f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {32, 0, 0, 0};
}

class SearchLoopMethod_Tree_25_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08905621f : 
        0.090245314f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
}

class SearchLoopMethod_Tree_25_class_6 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08905621f : 
        0.090245314f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {64, 0, 0, 0};
}

class SearchLoopMethod_Tree_25_class_7 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08905621f : 
        0.090245314f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {0, 2, 0, 0};
}

class SearchLoopMethod_Tree_25_class_8 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08905621f : 
        0.090245314f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
}


class SearchLoopMethod_Forest_26 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += SearchLoopMethod_Tree_26_class_0.score0(fdata);
    preds[2] += SearchLoopMethod_Tree_26_class_1.score0(fdata);
    preds[3] += SearchLoopMethod_Tree_26_class_2.score0(fdata);
    preds[4] += SearchLoopMethod_Tree_26_class_3.score0(fdata);
    preds[5] += SearchLoopMethod_Tree_26_class_4.score0(fdata);
    preds[6] += SearchLoopMethod_Tree_26_class_5.score0(fdata);
    preds[7] += SearchLoopMethod_Tree_26_class_6.score0(fdata);
    preds[8] += SearchLoopMethod_Tree_26_class_7.score0(fdata);
    preds[9] += SearchLoopMethod_Tree_26_class_8.score0(fdata);
  }
}
class SearchLoopMethod_Tree_26_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.089029044f : 
        0.09002266f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
}

class SearchLoopMethod_Tree_26_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.089029044f : 
        0.09002266f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {-120, 0, 0, 0};
}

class SearchLoopMethod_Tree_26_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.089029044f : 
        0.09002266f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {0, 1, 0, 0};
}

class SearchLoopMethod_Tree_26_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.089029044f : 
        0.09002266f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {16, 0, 0, 0};
}

class SearchLoopMethod_Tree_26_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.089029044f : 
        0.09002266f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {32, 0, 0, 0};
}

class SearchLoopMethod_Tree_26_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.089029044f : 
        0.09002266f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
}

class SearchLoopMethod_Tree_26_class_6 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.089029044f : 
        0.09002266f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {64, 0, 0, 0};
}

class SearchLoopMethod_Tree_26_class_7 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.089029044f : 
        0.09002266f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {0, 2, 0, 0};
}

class SearchLoopMethod_Tree_26_class_8 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.089029044f : 
        0.09002266f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
}


class SearchLoopMethod_Forest_27 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += SearchLoopMethod_Tree_27_class_0.score0(fdata);
    preds[2] += SearchLoopMethod_Tree_27_class_1.score0(fdata);
    preds[3] += SearchLoopMethod_Tree_27_class_2.score0(fdata);
    preds[4] += SearchLoopMethod_Tree_27_class_3.score0(fdata);
    preds[5] += SearchLoopMethod_Tree_27_class_4.score0(fdata);
    preds[6] += SearchLoopMethod_Tree_27_class_5.score0(fdata);
    preds[7] += SearchLoopMethod_Tree_27_class_6.score0(fdata);
    preds[8] += SearchLoopMethod_Tree_27_class_7.score0(fdata);
    preds[9] += SearchLoopMethod_Tree_27_class_8.score0(fdata);
  }
}
class SearchLoopMethod_Tree_27_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08900628f : 
        0.08983679f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
}

class SearchLoopMethod_Tree_27_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08900628f : 
        0.08983679f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {-120, 0, 0, 0};
}

class SearchLoopMethod_Tree_27_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08900628f : 
        0.08983679f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {0, 1, 0, 0};
}

class SearchLoopMethod_Tree_27_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08900628f : 
        0.08983679f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {16, 0, 0, 0};
}

class SearchLoopMethod_Tree_27_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08900628f : 
        0.08983679f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {32, 0, 0, 0};
}

class SearchLoopMethod_Tree_27_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08900628f : 
        0.08983679f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
}

class SearchLoopMethod_Tree_27_class_6 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08900628f : 
        0.08983679f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {64, 0, 0, 0};
}

class SearchLoopMethod_Tree_27_class_7 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08900628f : 
        0.08983679f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {0, 2, 0, 0};
}

class SearchLoopMethod_Tree_27_class_8 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08900628f : 
        0.08983679f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
}


class SearchLoopMethod_Forest_28 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += SearchLoopMethod_Tree_28_class_0.score0(fdata);
    preds[2] += SearchLoopMethod_Tree_28_class_1.score0(fdata);
    preds[3] += SearchLoopMethod_Tree_28_class_2.score0(fdata);
    preds[4] += SearchLoopMethod_Tree_28_class_3.score0(fdata);
    preds[5] += SearchLoopMethod_Tree_28_class_4.score0(fdata);
    preds[6] += SearchLoopMethod_Tree_28_class_5.score0(fdata);
    preds[7] += SearchLoopMethod_Tree_28_class_6.score0(fdata);
    preds[8] += SearchLoopMethod_Tree_28_class_7.score0(fdata);
    preds[9] += SearchLoopMethod_Tree_28_class_8.score0(fdata);
  }
}
class SearchLoopMethod_Tree_28_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08898721f : 
        0.089681566f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
}

class SearchLoopMethod_Tree_28_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08898721f : 
        0.089681566f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {-120, 0, 0, 0};
}

class SearchLoopMethod_Tree_28_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08898721f : 
        0.089681566f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {0, 1, 0, 0};
}

class SearchLoopMethod_Tree_28_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08898721f : 
        0.089681566f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {16, 0, 0, 0};
}

class SearchLoopMethod_Tree_28_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08898721f : 
        0.089681566f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {32, 0, 0, 0};
}

class SearchLoopMethod_Tree_28_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08898721f : 
        0.089681566f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
}

class SearchLoopMethod_Tree_28_class_6 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08898721f : 
        0.089681566f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {64, 0, 0, 0};
}

class SearchLoopMethod_Tree_28_class_7 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08898721f : 
        0.089681566f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {0, 2, 0, 0};
}

class SearchLoopMethod_Tree_28_class_8 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08898721f : 
        0.089681566f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
}


class SearchLoopMethod_Forest_29 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += SearchLoopMethod_Tree_29_class_0.score0(fdata);
    preds[2] += SearchLoopMethod_Tree_29_class_1.score0(fdata);
    preds[3] += SearchLoopMethod_Tree_29_class_2.score0(fdata);
    preds[4] += SearchLoopMethod_Tree_29_class_3.score0(fdata);
    preds[5] += SearchLoopMethod_Tree_29_class_4.score0(fdata);
    preds[6] += SearchLoopMethod_Tree_29_class_5.score0(fdata);
    preds[7] += SearchLoopMethod_Tree_29_class_6.score0(fdata);
    preds[8] += SearchLoopMethod_Tree_29_class_7.score0(fdata);
    preds[9] += SearchLoopMethod_Tree_29_class_8.score0(fdata);
  }
}
class SearchLoopMethod_Tree_29_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08897123f : 
        0.089551866f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {1, 0, 0, 0};
}

class SearchLoopMethod_Tree_29_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08897123f : 
        0.089551866f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {-120, 0, 0, 0};
}

class SearchLoopMethod_Tree_29_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08897123f : 
        0.089551866f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {0, 1, 0, 0};
}

class SearchLoopMethod_Tree_29_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08897123f : 
        0.089551866f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {16, 0, 0, 0};
}

class SearchLoopMethod_Tree_29_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08897123f : 
        0.089551866f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {32, 0, 0, 0};
}

class SearchLoopMethod_Tree_29_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08897123f : 
        0.089551866f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {4, 0, 0, 0};
}

class SearchLoopMethod_Tree_29_class_6 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08897123f : 
        0.089551866f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {64, 0, 0, 0};
}

class SearchLoopMethod_Tree_29_class_7 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08897123f : 
        0.089551866f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {0, 2, 0, 0};
}

class SearchLoopMethod_Tree_29_class_8 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0 /* currentStateIn */]) || !GenModel.bitSetIsInRange(32, 0, data[0]) || (GenModel.bitSetIsInRange(32, 0, data[0]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[0])) ? 
        -0.08897123f : 
        0.089551866f);
    return pred;
  } 
  
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
}


